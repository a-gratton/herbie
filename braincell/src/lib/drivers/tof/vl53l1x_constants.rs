use super::vl53l1x::DistanceMode;
use super::vl53l1x::TimingBudget;

// configuration constants
pub const TARGET_RATE: u16 = 0x0A00;
pub const DEFAULT_DM: DistanceMode = DistanceMode::Short; // short range mode
pub const DEFAULT_TB: TimingBudget = TimingBudget::Tb15ms; // default timing budget (ms)
pub const DEFAULT_IM_MS: u32 = 15; // default inter-measurement period (ms)
pub const DEFAULT_I2C_ADDR: u8 = 0x52 >> 1;
pub const SENSOR_ID: u16 = 0xeacc;
pub const OFFSET_VALUE: i16 = 27;

/*
0 = no error,
1 = sigma failure,
2 = signal failure,
4 = sensor out-of-bounds,
7 = wraparound
*/
pub const STATUS_RTN: [u8; 24] = [
    255, 255, 255, 5, 2, 4, 1, 7, 3, 0, 255, 255, 9, 13, 255, 255, 255, 255, 10, 6, 255, 255, 11,
    12,
];

pub const VL51L1X_DEFAULT_CONFIGURATION: [u8; 91] = [
    0x00, /* 0x2d : set bit 2 and 5 to 1 for fast plus mode (1MHz I2C), else don't touch */
    0x00, /* 0x2e : bit 0 if I2C pulled up at 1.8V, else set bit 0 to 1 (pull up at AVDD) */
    0x00, /* 0x2f : bit 0 if GPIO pulled up at 1.8V, else set bit 0 to 1 (pull up at AVDD) */
    0x01, /* 0x30 : set bit 4 to 0 for active high interrupt and 1 for active low (bits 3:0 must be 0x1), use SetInterruptPolarity() */
    0x02, /* 0x31 : bit 1 = interrupt depending on the polarity, use CheckForDataReady() */
    0x00, /* 0x32 : not user-modifiable */
    0x02, /* 0x33 : not user-modifiable */
    0x08, /* 0x34 : not user-modifiable */
    0x00, /* 0x35 : not user-modifiable */
    0x08, /* 0x36 : not user-modifiable */
    0x10, /* 0x37 : not user-modifiable */
    0x01, /* 0x38 : not user-modifiable */
    0x01, /* 0x39 : not user-modifiable */
    0x00, /* 0x3a : not user-modifiable */
    0x00, /* 0x3b : not user-modifiable */
    0x00, /* 0x3c : not user-modifiable */
    0x00, /* 0x3d : not user-modifiable */
    0xff, /* 0x3e : not user-modifiable */
    0x00, /* 0x3f : not user-modifiable */
    0x0F, /* 0x40 : not user-modifiable */
    0x00, /* 0x41 : not user-modifiable */
    0x00, /* 0x42 : not user-modifiable */
    0x00, /* 0x43 : not user-modifiable */
    0x00, /* 0x44 : not user-modifiable */
    0x00, /* 0x45 : not user-modifiable */
    0x20, /* 0x46 : interrupt configuration 0->level low detection, 1-> level high, 2-> Out of window, 3->In window, 0x20-> New sample ready , TBC */
    0x0b, /* 0x47 : not user-modifiable */
    0x00, /* 0x48 : not user-modifiable */
    0x00, /* 0x49 : not user-modifiable */
    0x02, /* 0x4a : not user-modifiable */
    0x0a, /* 0x4b : not user-modifiable */
    0x21, /* 0x4c : not user-modifiable */
    0x00, /* 0x4d : not user-modifiable */
    0x00, /* 0x4e : not user-modifiable */
    0x05, /* 0x4f : not user-modifiable */
    0x00, /* 0x50 : not user-modifiable */
    0x00, /* 0x51 : not user-modifiable */
    0x00, /* 0x52 : not user-modifiable */
    0x00, /* 0x53 : not user-modifiable */
    0xc8, /* 0x54 : not user-modifiable */
    0x00, /* 0x55 : not user-modifiable */
    0x00, /* 0x56 : not user-modifiable */
    0x38, /* 0x57 : not user-modifiable */
    0xff, /* 0x58 : not user-modifiable */
    0x01, /* 0x59 : not user-modifiable */
    0x00, /* 0x5a : not user-modifiable */
    0x08, /* 0x5b : not user-modifiable */
    0x00, /* 0x5c : not user-modifiable */
    0x00, /* 0x5d : not user-modifiable */
    0x01, /* 0x5e : not user-modifiable */
    0xcc, /* 0x5f : not user-modifiable */
    0x0f, /* 0x60 : not user-modifiable */
    0x01, /* 0x61 : not user-modifiable */
    0xf1, /* 0x62 : not user-modifiable */
    0x0d, /* 0x63 : not user-modifiable */
    0x01, /* 0x64 : Sigma threshold MSB (mm in 14.2 format for MSB+LSB), use SetSigmaThreshold(), default value 90 mm  */
    0x68, /* 0x65 : Sigma threshold LSB */
    0x00, /* 0x66 : Min count Rate MSB (MCPS in 9.7 format for MSB+LSB), use SetSignalThreshold() */
    0x80, /* 0x67 : Min count Rate LSB */
    0x08, /* 0x68 : not user-modifiable */
    0xb8, /* 0x69 : not user-modifiable */
    0x00, /* 0x6a : not user-modifiable */
    0x00, /* 0x6b : not user-modifiable */
    0x00, /* 0x6c : Intermeasurement period MSB, 32 bits register, use SetIntermeasurementInMs() */
    0x00, /* 0x6d : Intermeasurement period */
    0x0f, /* 0x6e : Intermeasurement period */
    0x89, /* 0x6f : Intermeasurement period LSB */
    0x00, /* 0x70 : not user-modifiable */
    0x00, /* 0x71 : not user-modifiable */
    0x00, /* 0x72 : distance threshold high MSB (in mm, MSB+LSB), use SetD:tanceThreshold() */
    0x00, /* 0x73 : distance threshold high LSB */
    0x00, /* 0x74 : distance threshold low MSB ( in mm, MSB+LSB), use SetD:tanceThreshold() */
    0x00, /* 0x75 : distance threshold low LSB */
    0x00, /* 0x76 : not user-modifiable */
    0x01, /* 0x77 : not user-modifiable */
    0x0f, /* 0x78 : not user-modifiable */
    0x0d, /* 0x79 : not user-modifiable */
    0x0e, /* 0x7a : not user-modifiable */
    0x0e, /* 0x7b : not user-modifiable */
    0x00, /* 0x7c : not user-modifiable */
    0x00, /* 0x7d : not user-modifiable */
    0x02, /* 0x7e : not user-modifiable */
    0xc7, /* 0x7f : ROI center, use SetROI() */
    0xff, /* 0x80 : XY ROI (X=Width, Y=Height), use SetROI() */
    0x9B, /* 0x81 : not user-modifiable */
    0x00, /* 0x82 : not user-modifiable */
    0x00, /* 0x83 : not user-modifiable */
    0x00, /* 0x84 : not user-modifiable */
    0x01, /* 0x85 : not user-modifiable */
    0x00, /* 0x86 : clear interrupt, use ClearInterrupt() */
    0x00, /* 0x87 : start ranging, use StartRanging() or StopRanging(), If you want an automatic start after VL53L1X_init() call, put 0x40 in location 0x87 */
];

// register access constants
pub const SOFT_RESET: [u8; 2] = [0x00, 0x00];
pub const I2C_SLAVE__DEVICE_ADDRESS: [u8; 2] = [0x00, 0x01];
// pub const ANA_CONFIG__VHV_REF_SEL_VDDPIX                                             : [u8; 2] = [0x00, 0x02];
// pub const ANA_CONFIG__VHV_REF_SEL_VQUENCH                                            : [u8; 2] = [0x00, 0x03];
// pub const ANA_CONFIG__REG_AVDD1V2_SEL                                                : [u8; 2] = [0x00, 0x04];
// pub const ANA_CONFIG__FAST_OSC__TRIM                                                 : [u8; 2] = [0x00, 0x05];
// pub const OSC_MEASURED__FAST_OSC__FREQUENCY                                          : [u8; 2] = [0x00, 0x06];
// pub const OSC_MEASURED__FAST_OSC__FREQUENCY_HI                                       : [u8; 2] = [0x00, 0x06];
// pub const OSC_MEASURED__FAST_OSC__FREQUENCY_LO                                       : [u8; 2] = [0x00, 0x07];
pub const VHV_CONFIG__TIMEOUT_MACROP_LOOP_BOUND: [u8; 2] = [0x00, 0x08];
// pub const VHV_CONFIG__COUNT_THRESH                                                   : [u8; 2] = [0x00, 0x09];
// pub const VHV_CONFIG__OFFSET                                                         : [u8; 2] = [0x00, 0x0A];
// pub const VHV_CONFIG__INIT                                                           : [u8; 2] = [0x00, 0x0B];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_REF_0                                          : [u8; 2] = [0x00, 0x0D];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_REF_1                                          : [u8; 2] = [0x00, 0x0E];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_REF_2                                          : [u8; 2] = [0x00, 0x0F];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_REF_3                                          : [u8; 2] = [0x00, 0x10];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_REF_4                                          : [u8; 2] = [0x00, 0x11];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_REF_5                                          : [u8; 2] = [0x00, 0x12];
// pub const GLOBAL_CONFIG__REF_EN_START_SELECT                                         : [u8; 2] = [0x00, 0x13];
// pub const REF_SPAD_MAN__NUM_REQUESTED_REF_SPADS                                      : [u8; 2] = [0x00, 0x14];
// pub const REF_SPAD_MAN__REF_LOCATION                                                 : [u8; 2] = [0x00, 0x15];
// pub const ALGO__CROSSTALK_COMPENSATION_PLANE_OFFSET_KCPS                             : [u8; 2] = [0x00, 0x16];
// pub const ALGO__CROSSTALK_COMPENSATION_PLANE_OFFSET_KCPS_HI                          : [u8; 2] = [0x00, 0x16];
// pub const ALGO__CROSSTALK_COMPENSATION_PLANE_OFFSET_KCPS_LO                          : [u8; 2] = [0x00, 0x17];
// pub const ALGO__CROSSTALK_COMPENSATION_X_PLANE_GRADIENT_KCPS                         : [u8; 2] = [0x00, 0x18];
// pub const ALGO__CROSSTALK_COMPENSATION_X_PLANE_GRADIENT_KCPS_HI                      : [u8; 2] = [0x00, 0x18];
// pub const ALGO__CROSSTALK_COMPENSATION_X_PLANE_GRADIENT_KCPS_LO                      : [u8; 2] = [0x00, 0x19];
// pub const ALGO__CROSSTALK_COMPENSATION_Y_PLANE_GRADIENT_KCPS                         : [u8; 2] = [0x00, 0x1A];
// pub const ALGO__CROSSTALK_COMPENSATION_Y_PLANE_GRADIENT_KCPS_HI                      : [u8; 2] = [0x00, 0x1A];
// pub const ALGO__CROSSTALK_COMPENSATION_Y_PLANE_GRADIENT_KCPS_LO                      : [u8; 2] = [0x00, 0x1B];
// pub const REF_SPAD_CHAR__TOTAL_RATE_TARGET_MCPS                                      : [u8; 2] = [0x00, 0x1C];
// pub const REF_SPAD_CHAR__TOTAL_RATE_TARGET_MCPS_HI                                   : [u8; 2] = [0x00, 0x1C];
// pub const REF_SPAD_CHAR__TOTAL_RATE_TARGET_MCPS_LO                                   : [u8; 2] = [0x00, 0x1D];
pub const ALGO__PART_TO_PART_RANGE_OFFSET_MM: [u8; 2] = [0x00, 0x1E];
// pub const ALGO__PART_TO_PART_RANGE_OFFSET_MM_HI                                      : [u8; 2] = [0x00, 0x1E];
// pub const ALGO__PART_TO_PART_RANGE_OFFSET_MM_LO                                      : [u8; 2] = [0x00, 0x1F];
pub const MM_CONFIG__INNER_OFFSET_MM: [u8; 2] = [0x00, 0x20];
// pub const MM_CONFIG__INNER_OFFSET_MM_HI                                              : [u8; 2] = [0x00, 0x20];
// pub const MM_CONFIG__INNER_OFFSET_MM_LO                                              : [u8; 2] = [0x00, 0x21];
pub const MM_CONFIG__OUTER_OFFSET_MM: [u8; 2] = [0x00, 0x22];
// pub const MM_CONFIG__OUTER_OFFSET_MM_HI                                              : [u8; 2] = [0x00, 0x22];
// pub const MM_CONFIG__OUTER_OFFSET_MM_LO                                              : [u8; 2] = [0x00, 0x23];
pub const DSS_CONFIG__TARGET_TOTAL_RATE_MCPS: [u8; 2] = [0x00, 0x24];
// pub const DSS_CONFIG__TARGET_TOTAL_RATE_MCPS_HI                                      : [u8; 2] = [0x00, 0x24];
// pub const DSS_CONFIG__TARGET_TOTAL_RATE_MCPS_LO                                      : [u8; 2] = [0x00, 0x25];
// pub const DEBUG__CTRL                                                                : [u8; 2] = [0x00, 0x26];
// pub const TEST_MODE__CTRL                                                            : [u8; 2] = [0x00, 0x27];
// pub const CLK_GATING__CTRL                                                           : [u8; 2] = [0x00, 0x28];
// pub const NVM_BIST__CTRL                                                             : [u8; 2] = [0x00, 0x29];
// pub const NVM_BIST__NUM_NVM_WORDS                                                    : [u8; 2] = [0x00, 0x2A];
// pub const NVM_BIST__START_ADDRESS                                                    : [u8; 2] = [0x00, 0x2B];
// pub const HOST_IF__STATUS                                                            : [u8; 2] = [0x00, 0x2C];
// pub const PAD_I2C_HV__CONFIG                                                         : [u8; 2] = [0x00, 0x2D];
pub const PAD_I2C_HV__EXTSUP_CONFIG: [u8; 2] = [0x00, 0x2E];
// pub const GPIO_HV_PAD__CTRL                                                          : [u8; 2] = [0x00, 0x2F];
// pub const GPIO_HV_MUX__CTRL                                                          : [u8; 2] = [0x00, 0x30];
pub const GPIO__TIO_HV_STATUS: [u8; 2] = [0x00, 0x31];
// pub const GPIO__FIO_HV_STATUS                                                        : [u8; 2] = [0x00, 0x32];
// pub const ANA_CONFIG__SPAD_SEL_PSWIDTH                                               : [u8; 2] = [0x00, 0x33];
// pub const ANA_CONFIG__VCSEL_PULSE_WIDTH_OFFSET                                       : [u8; 2] = [0x00, 0x34];
// pub const ANA_CONFIG__FAST_OSC__CONFIG_CTRL                                          : [u8; 2] = [0x00, 0x35];
pub const SIGMA_ESTIMATOR__EFFECTIVE_PULSE_WIDTH_NS: [u8; 2] = [0x00, 0x36];
pub const SIGMA_ESTIMATOR__EFFECTIVE_AMBIENT_WIDTH_NS: [u8; 2] = [0x00, 0x37];
// pub const SIGMA_ESTIMATOR__SIGMA_REF_MM                                              : [u8; 2] = [0x00, 0x38];
pub const ALGO__CROSSTALK_COMPENSATION_VALID_HEIGHT_MM: [u8; 2] = [0x00, 0x39];
// pub const SPARE_HOST_CONFIG__STATIC_CONFIG_SPARE_0                                   : [u8; 2] = [0x00, 0x3A];
// pub const SPARE_HOST_CONFIG__STATIC_CONFIG_SPARE_1                                   : [u8; 2] = [0x00, 0x3B];
// pub const ALGO__RANGE_IGNORE_THRESHOLD_MCPS                                          : [u8; 2] = [0x00, 0x3C];
// pub const ALGO__RANGE_IGNORE_THRESHOLD_MCPS_HI                                       : [u8; 2] = [0x00, 0x3C];
// pub const ALGO__RANGE_IGNORE_THRESHOLD_MCPS_LO                                       : [u8; 2] = [0x00, 0x3D];
pub const ALGO__RANGE_IGNORE_VALID_HEIGHT_MM: [u8; 2] = [0x00, 0x3E];
pub const ALGO__RANGE_MIN_CLIP: [u8; 2] = [0x00, 0x3F];
pub const ALGO__CONSISTENCY_CHECK__TOLERANCE: [u8; 2] = [0x00, 0x40];
// pub const SPARE_HOST_CONFIG__STATIC_CONFIG_SPARE_2                                   : [u8; 2] = [0x00, 0x41];
// pub const SD_CONFIG__RESET_STAGES_MSB                                                : [u8; 2] = [0x00, 0x42];
// pub const SD_CONFIG__RESET_STAGES_LSB                                                : [u8; 2] = [0x00, 0x43];
// pub const GPH_CONFIG__STREAM_COUNT_UPDATE_VALUE                                      : [u8; 2] = [0x00, 0x44];
// pub const GLOBAL_CONFIG__STREAM_DIVIDER                                              : [u8; 2] = [0x00, 0x45];
// pub const SYSTEM__INTERRUPT_CONFIG_GPIO                                              : [u8; 2] = [0x00, 0x46];
// pub const CAL_CONFIG__VCSEL_START                                                    : [u8; 2] = [0x00, 0x47];
// pub const CAL_CONFIG__REPEAT_RATE                                                    : [u8; 2] = [0x00, 0x48];
// pub const CAL_CONFIG__REPEAT_RATE_HI                                                 : [u8; 2] = [0x00, 0x48];
// pub const CAL_CONFIG__REPEAT_RATE_LO                                                 : [u8; 2] = [0x00, 0x49];
// pub const GLOBAL_CONFIG__VCSEL_WIDTH                                                 : [u8; 2] = [0x00, 0x4A];
pub const PHASECAL_CONFIG__TIMEOUT_MACROP: [u8; 2] = [0x00, 0x4B];
// pub const PHASECAL_CONFIG__TARGET                                                    : [u8; 2] = [0x00, 0x4C];
// pub const PHASECAL_CONFIG__OVERRIDE                                                  : [u8; 2] = [0x00, 0x4D];
pub const DSS_CONFIG__ROI_MODE_CONTROL: [u8; 2] = [0x00, 0x4F];
pub const SYSTEM__THRESH_RATE_HIGH: [u8; 2] = [0x00, 0x50];
// pub const SYSTEM__THRESH_RATE_HIGH_HI                                                : [u8; 2] = [0x00, 0x50];
// pub const SYSTEM__THRESH_RATE_HIGH_LO                                                : [u8; 2] = [0x00, 0x51];
pub const SYSTEM__THRESH_RATE_LOW: [u8; 2] = [0x00, 0x52];
// pub const SYSTEM__THRESH_RATE_LOW_HI                                                 : [u8; 2] = [0x00, 0x52];
// pub const SYSTEM__THRESH_RATE_LOW_LO                                                 : [u8; 2] = [0x00, 0x53];
pub const DSS_CONFIG__MANUAL_EFFECTIVE_SPADS_SELECT: [u8; 2] = [0x00, 0x54];
// pub const DSS_CONFIG__MANUAL_EFFECTIVE_SPADS_SELECT_HI                               : [u8; 2] = [0x00, 0x54];
// pub const DSS_CONFIG__MANUAL_EFFECTIVE_SPADS_SELECT_LO                               : [u8; 2] = [0x00, 0x55];
// pub const DSS_CONFIG__MANUAL_BLOCK_SELECT                                            : [u8; 2] = [0x00, 0x56];
pub const DSS_CONFIG__APERTURE_ATTENUATION: [u8; 2] = [0x00, 0x57];
// pub const DSS_CONFIG__MAX_SPADS_LIMIT                                                : [u8; 2] = [0x00, 0x58];
// pub const DSS_CONFIG__MIN_SPADS_LIMIT                                                : [u8; 2] = [0x00, 0x59];
// pub const MM_CONFIG__TIMEOUT_MACROP_A                                                : [u8; 2] = [0x00, 0x5A]; // added by Pololu for 16-bit accesses
// pub const MM_CONFIG__TIMEOUT_MACROP_A_HI                                             : [u8; 2] = [0x00, 0x5A];
// pub const MM_CONFIG__TIMEOUT_MACROP_A_LO                                             : [u8; 2] = [0x00, 0x5B];
// pub const MM_CONFIG__TIMEOUT_MACROP_B                                                : [u8; 2] = [0x00, 0x5C]; // added by Pololu for 16-bit accesses
// pub const MM_CONFIG__TIMEOUT_MACROP_B_HI                                             : [u8; 2] = [0x00, 0x5C];
// pub const MM_CONFIG__TIMEOUT_MACROP_B_LO                                             : [u8; 2] = [0x00, 0x5D];
// pub const RANGE_CONFIG__TIMEOUT_MACROP_A                                             : [u8; 2] = [0x00, 0x5E]; // added by Pololu for 16-bit accesses
pub const RANGE_CONFIG__TIMEOUT_MACROP_A_HI: [u8; 2] = [0x00, 0x5E];
// pub const RANGE_CONFIG__TIMEOUT_MACROP_A_LO                                          : [u8; 2] = [0x00, 0x5F];
pub const RANGE_CONFIG__VCSEL_PERIOD_A: [u8; 2] = [0x00, 0x60];
// pub const RANGE_CONFIG__TIMEOUT_MACROP_B                                             : [u8; 2] = [0x00, 0x61]; // added by Pololu for 16-bit accesses
pub const RANGE_CONFIG__TIMEOUT_MACROP_B_HI: [u8; 2] = [0x00, 0x61];
// pub const RANGE_CONFIG__TIMEOUT_MACROP_B_LO                                          : [u8; 2] = [0x00, 0x62];
pub const RANGE_CONFIG__VCSEL_PERIOD_B: [u8; 2] = [0x00, 0x63];
pub const RANGE_CONFIG__SIGMA_THRESH: [u8; 2] = [0x00, 0x64];
// pub const RANGE_CONFIG__SIGMA_THRESH_HI                                              : [u8; 2] = [0x00, 0x64];
// pub const RANGE_CONFIG__SIGMA_THRESH_LO                                              : [u8; 2] = [0x00, 0x65];
pub const RANGE_CONFIG__MIN_COUNT_RATE_RTN_LIMIT_MCPS: [u8; 2] = [0x00, 0x66];
// pub const RANGE_CONFIG__MIN_COUNT_RATE_RTN_LIMIT_MCPS_HI                             : [u8; 2] = [0x00, 0x66];
// pub const RANGE_CONFIG__MIN_COUNT_RATE_RTN_LIMIT_MCPS_LO                             : [u8; 2] = [0x00, 0x67];
// pub const RANGE_CONFIG__VALID_PHASE_LOW                                              : [u8; 2] = [0x00, 0x68];
pub const RANGE_CONFIG__VALID_PHASE_HIGH: [u8; 2] = [0x00, 0x69];
pub const SYSTEM__INTERMEASUREMENT_PERIOD: [u8; 2] = [0x00, 0x6C];
// pub const SYSTEM__INTERMEASUREMENT_PERIOD_3                                          : [u8; 2] = [0x00, 0x6C];
// pub const SYSTEM__INTERMEASUREMENT_PERIOD_2                                          : [u8; 2] = [0x00, 0x6D];
// pub const SYSTEM__INTERMEASUREMENT_PERIOD_1                                          : [u8; 2] = [0x00, 0x6E];
// pub const SYSTEM__INTERMEASUREMENT_PERIOD_0                                          : [u8; 2] = [0x00, 0x6F];
// pub const SYSTEM__FRACTIONAL_ENABLE                                                  : [u8; 2] = [0x00, 0x70];
pub const SYSTEM__GROUPED_PARAMETER_HOLD_0: [u8; 2] = [0x00, 0x71];
// pub const SYSTEM__THRESH_HIGH                                                        : [u8; 2] = [0x00, 0x72];
// pub const SYSTEM__THRESH_HIGH_HI                                                     : [u8; 2] = [0x00, 0x72];
// pub const SYSTEM__THRESH_HIGH_LO                                                     : [u8; 2] = [0x00, 0x73];
// pub const SYSTEM__THRESH_LOW                                                         : [u8; 2] = [0x00, 0x74];
// pub const SYSTEM__THRESH_LOW_HI                                                      : [u8; 2] = [0x00, 0x74];
// pub const SYSTEM__THRESH_LOW_LO                                                      : [u8; 2] = [0x00, 0x75];
// pub const SYSTEM__ENABLE_XTALK_PER_QUADRANT                                          : [u8; 2] = [0x00, 0x76];
pub const SYSTEM__SEED_CONFIG: [u8; 2] = [0x00, 0x77];
pub const SD_CONFIG__WOI_SD0: [u8; 2] = [0x00, 0x78];
// pub const SD_CONFIG__WOI_SD1                                                         : [u8; 2] = [0x00, 0x79];
pub const SD_CONFIG__INITIAL_PHASE_SD0: [u8; 2] = [0x00, 0x7A];
// pub const SD_CONFIG__INITIAL_PHASE_SD1                                               : [u8; 2] = [0x00, 0x7B];
pub const SYSTEM__GROUPED_PARAMETER_HOLD_1: [u8; 2] = [0x00, 0x7C];
// pub const SD_CONFIG__FIRST_ORDER_SELECT                                              : [u8; 2] = [0x00, 0x7D];
pub const SD_CONFIG__QUANTIFIER: [u8; 2] = [0x00, 0x7E];
// pub const ROI_CONFIG__USER_ROI_CENTRE_SPAD                                           : [u8; 2] = [0x00, 0x7F];
// pub const ROI_CONFIG__USER_ROI_REQUESTED_GLOBAL_XY_SIZE                              : [u8; 2] = [0x00, 0x80];
pub const SYSTEM__SEQUENCE_CONFIG: [u8; 2] = [0x00, 0x81];
pub const SYSTEM__GROUPED_PARAMETER_HOLD: [u8; 2] = [0x00, 0x82];
// pub const POWER_MANAGEMENT__GO1_POWER_FORCE                                          : [u8; 2] = [0x00, 0x83];
// pub const SYSTEM__STREAM_COUNT_CTRL                                                  : [u8; 2] = [0x00, 0x84];
// pub const FIRMWARE__ENABLE                                                           : [u8; 2] = [0x00, 0x85];
pub const SYSTEM__INTERRUPT_CLEAR: [u8; 2] = [0x00, 0x86];
pub const SYSTEM__MODE_START: [u8; 2] = [0x00, 0x87];
// pub const RESULT__INTERRUPT_STATUS                                                   : [u8; 2] = [0x00, 0x88];
pub const RESULT__RANGE_STATUS: [u8; 2] = [0x00, 0x89];
// pub const RESULT__REPORT_STATUS                                                      : [u8; 2] = [0x00, 0x8A];
// pub const RESULT__STREAM_COUNT                                                       : [u8; 2] = [0x00, 0x8B];
// pub const RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0                                     : [u8; 2] = [0x00, 0x8C];
// pub const RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0_HI                                  : [u8; 2] = [0x00, 0x8C];
// pub const RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0_LO                                  : [u8; 2] = [0x00, 0x8D];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0                                    : [u8; 2] = [0x00, 0x8E];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0_HI                                 : [u8; 2] = [0x00, 0x8E];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0_LO                                 : [u8; 2] = [0x00, 0x8F];
// pub const RESULT__AMBIENT_COUNT_RATE_MCPS_SD0                                        : [u8; 2] = [0x00, 0x90];
// pub const RESULT__AMBIENT_COUNT_RATE_MCPS_SD0_HI                                     : [u8; 2] = [0x00, 0x90];
// pub const RESULT__AMBIENT_COUNT_RATE_MCPS_SD0_LO                                     : [u8; 2] = [0x00, 0x91];
// pub const RESULT__SIGMA_SD0                                                          : [u8; 2] = [0x00, 0x92];
// pub const RESULT__SIGMA_SD0_HI                                                       : [u8; 2] = [0x00, 0x92];
// pub const RESULT__SIGMA_SD0_LO                                                       : [u8; 2] = [0x00, 0x93];
// pub const RESULT__PHASE_SD0                                                          : [u8; 2] = [0x00, 0x94];
// pub const RESULT__PHASE_SD0_HI                                                       : [u8; 2] = [0x00, 0x94];
// pub const RESULT__PHASE_SD0_LO                                                       : [u8; 2] = [0x00, 0x95];
pub const RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0: [u8; 2] = [0x00, 0x96];
// pub const RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0_HI                          : [u8; 2] = [0x00, 0x96];
// pub const RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0_LO                          : [u8; 2] = [0x00, 0x97];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0                : [u8; 2] = [0x00, 0x98];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0_HI             : [u8; 2] = [0x00, 0x98];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0_LO             : [u8; 2] = [0x00, 0x99];
// pub const RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0                                : [u8; 2] = [0x00, 0x9A];
// pub const RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0_HI                             : [u8; 2] = [0x00, 0x9A];
// pub const RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0_LO                             : [u8; 2] = [0x00, 0x9B];
// pub const RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0                                : [u8; 2] = [0x00, 0x9C];
// pub const RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0_HI                             : [u8; 2] = [0x00, 0x9C];
// pub const RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0_LO                             : [u8; 2] = [0x00, 0x9D];
// pub const RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0                                     : [u8; 2] = [0x00, 0x9E];
// pub const RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0_HI                                  : [u8; 2] = [0x00, 0x9E];
// pub const RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0_LO                                  : [u8; 2] = [0x00, 0x9F];
// pub const RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1                                     : [u8; 2] = [0x00, 0xA0];
// pub const RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1_HI                                  : [u8; 2] = [0x00, 0xA0];
// pub const RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1_LO                                  : [u8; 2] = [0x00, 0xA1];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1                                    : [u8; 2] = [0x00, 0xA2];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1_HI                                 : [u8; 2] = [0x00, 0xA2];
// pub const RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1_LO                                 : [u8; 2] = [0x00, 0xA3];
// pub const RESULT__AMBIENT_COUNT_RATE_MCPS_SD1                                        : [u8; 2] = [0x00, 0xA4];
// pub const RESULT__AMBIENT_COUNT_RATE_MCPS_SD1_HI                                     : [u8; 2] = [0x00, 0xA4];
// pub const RESULT__AMBIENT_COUNT_RATE_MCPS_SD1_LO                                     : [u8; 2] = [0x00, 0xA5];
// pub const RESULT__SIGMA_SD1                                                          : [u8; 2] = [0x00, 0xA6];
// pub const RESULT__SIGMA_SD1_HI                                                       : [u8; 2] = [0x00, 0xA6];
// pub const RESULT__SIGMA_SD1_LO                                                       : [u8; 2] = [0x00, 0xA7];
// pub const RESULT__PHASE_SD1                                                          : [u8; 2] = [0x00, 0xA8];
// pub const RESULT__PHASE_SD1_HI                                                       : [u8; 2] = [0x00, 0xA8];
// pub const RESULT__PHASE_SD1_LO                                                       : [u8; 2] = [0x00, 0xA9];
// pub const RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1                             : [u8; 2] = [0x00, 0xAA];
// pub const RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1_HI                          : [u8; 2] = [0x00, 0xAA];
// pub const RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1_LO                          : [u8; 2] = [0x00, 0xAB];
// pub const RESULT__SPARE_0_SD1                                                        : [u8; 2] = [0x00, 0xAC];
// pub const RESULT__SPARE_0_SD1_HI                                                     : [u8; 2] = [0x00, 0xAC];
// pub const RESULT__SPARE_0_SD1_LO                                                     : [u8; 2] = [0x00, 0xAD];
// pub const RESULT__SPARE_1_SD1                                                        : [u8; 2] = [0x00, 0xAE];
// pub const RESULT__SPARE_1_SD1_HI                                                     : [u8; 2] = [0x00, 0xAE];
// pub const RESULT__SPARE_1_SD1_LO                                                     : [u8; 2] = [0x00, 0xAF];
// pub const RESULT__SPARE_2_SD1                                                        : [u8; 2] = [0x00, 0xB0];
// pub const RESULT__SPARE_2_SD1_HI                                                     : [u8; 2] = [0x00, 0xB0];
// pub const RESULT__SPARE_2_SD1_LO                                                     : [u8; 2] = [0x00, 0xB1];
// pub const RESULT__SPARE_3_SD1                                                        : [u8; 2] = [0x00, 0xB2];
// pub const RESULT__THRESH_INFO                                                        : [u8; 2] = [0x00, 0xB3];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0                                     : [u8; 2] = [0x00, 0xB4];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_3                                   : [u8; 2] = [0x00, 0xB4];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_2                                   : [u8; 2] = [0x00, 0xB5];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_1                                   : [u8; 2] = [0x00, 0xB6];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_0                                   : [u8; 2] = [0x00, 0xB7];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD0                                      : [u8; 2] = [0x00, 0xB8];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_3                                    : [u8; 2] = [0x00, 0xB8];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_2                                    : [u8; 2] = [0x00, 0xB9];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_1                                    : [u8; 2] = [0x00, 0xBA];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_0                                    : [u8; 2] = [0x00, 0xBB];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0                                       : [u8; 2] = [0x00, 0xBC];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_3                                     : [u8; 2] = [0x00, 0xBC];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_2                                     : [u8; 2] = [0x00, 0xBD];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_1                                     : [u8; 2] = [0x00, 0xBE];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_0                                     : [u8; 2] = [0x00, 0xBF];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0                                     : [u8; 2] = [0x00, 0xC0];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_3                                   : [u8; 2] = [0x00, 0xC0];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_2                                   : [u8; 2] = [0x00, 0xC1];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_1                                   : [u8; 2] = [0x00, 0xC2];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_0                                   : [u8; 2] = [0x00, 0xC3];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1                                     : [u8; 2] = [0x00, 0xC4];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_3                                   : [u8; 2] = [0x00, 0xC4];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_2                                   : [u8; 2] = [0x00, 0xC5];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_1                                   : [u8; 2] = [0x00, 0xC6];
// pub const RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_0                                   : [u8; 2] = [0x00, 0xC7];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD1                                      : [u8; 2] = [0x00, 0xC8];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_3                                    : [u8; 2] = [0x00, 0xC8];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_2                                    : [u8; 2] = [0x00, 0xC9];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_1                                    : [u8; 2] = [0x00, 0xCA];
// pub const RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_0                                    : [u8; 2] = [0x00, 0xCB];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1                                       : [u8; 2] = [0x00, 0xCC];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_3                                     : [u8; 2] = [0x00, 0xCC];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_2                                     : [u8; 2] = [0x00, 0xCD];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_1                                     : [u8; 2] = [0x00, 0xCE];
// pub const RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_0                                     : [u8; 2] = [0x00, 0xCF];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1                                     : [u8; 2] = [0x00, 0xD0];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_3                                   : [u8; 2] = [0x00, 0xD0];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_2                                   : [u8; 2] = [0x00, 0xD1];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_1                                   : [u8; 2] = [0x00, 0xD2];
// pub const RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_0                                   : [u8; 2] = [0x00, 0xD3];
// pub const RESULT_CORE__SPARE_0                                                       : [u8; 2] = [0x00, 0xD4];
// pub const PHASECAL_RESULT__REFERENCE_PHASE                                           : [u8; 2] = [0x00, 0xD6];
// pub const PHASECAL_RESULT__REFERENCE_PHASE_HI                                        : [u8; 2] = [0x00, 0xD6];
// pub const PHASECAL_RESULT__REFERENCE_PHASE_LO                                        : [u8; 2] = [0x00, 0xD7];
// pub const PHASECAL_RESULT__VCSEL_START                                               : [u8; 2] = [0x00, 0xD8];
// pub const REF_SPAD_CHAR_RESULT__NUM_ACTUAL_REF_SPADS                                 : [u8; 2] = [0x00, 0xD9];
// pub const REF_SPAD_CHAR_RESULT__REF_LOCATION                                         : [u8; 2] = [0x00, 0xDA];
// pub const VHV_RESULT__COLDBOOT_STATUS                                                : [u8; 2] = [0x00, 0xDB];
// pub const VHV_RESULT__SEARCH_RESULT                                                  : [u8; 2] = [0x00, 0xDC];
// pub const VHV_RESULT__LATEST_SETTING                                                 : [u8; 2] = [0x00, 0xDD];
pub const RESULT__OSC_CALIBRATE_VAL: [u8; 2] = [0x00, 0xDE];
// pub const RESULT__OSC_CALIBRATE_VAL_HI                                               : [u8; 2] = [0x00, 0xDE];
// pub const RESULT__OSC_CALIBRATE_VAL_LO                                               : [u8; 2] = [0x00, 0xDF];
// pub const ANA_CONFIG__POWERDOWN_GO1                                                  : [u8; 2] = [0x00, 0xE0];
// pub const ANA_CONFIG__REF_BG_CTRL                                                    : [u8; 2] = [0x00, 0xE1];
// pub const ANA_CONFIG__REGDVDD1V2_CTRL                                                : [u8; 2] = [0x00, 0xE2];
// pub const ANA_CONFIG__OSC_SLOW_CTRL                                                  : [u8; 2] = [0x00, 0xE3];
// pub const TEST_MODE__STATUS                                                          : [u8; 2] = [0x00, 0xE4];
pub const FIRMWARE__SYSTEM_STATUS: [u8; 2] = [0x00, 0xE5];
// pub const FIRMWARE__MODE_STATUS                                                      : [u8; 2] = [0x00, 0xE6];
// pub const FIRMWARE__SECONDARY_MODE_STATUS                                            : [u8; 2] = [0x00, 0xE7];
// pub const FIRMWARE__CAL_REPEAT_RATE_COUNTER                                          : [u8; 2] = [0x00, 0xE8];
// pub const FIRMWARE__CAL_REPEAT_RATE_COUNTER_HI                                       : [u8; 2] = [0x00, 0xE8];
// pub const FIRMWARE__CAL_REPEAT_RATE_COUNTER_LO                                       : [u8; 2] = [0x00, 0xE9];
// pub const FIRMWARE__HISTOGRAM_BIN                                                    : [u8; 2] = [0x00, 0xEA];
// pub const GPH__SYSTEM__THRESH_HIGH                                                   : [u8; 2] = [0x00, 0xEC];
// pub const GPH__SYSTEM__THRESH_HIGH_HI                                                : [u8; 2] = [0x00, 0xEC];
// pub const GPH__SYSTEM__THRESH_HIGH_LO                                                : [u8; 2] = [0x00, 0xED];
// pub const GPH__SYSTEM__THRESH_LOW                                                    : [u8; 2] = [0x00, 0xEE];
// pub const GPH__SYSTEM__THRESH_LOW_HI                                                 : [u8; 2] = [0x00, 0xEE];
// pub const GPH__SYSTEM__THRESH_LOW_LO                                                 : [u8; 2] = [0x00, 0xEF];
// pub const GPH__SYSTEM__ENABLE_XTALK_PER_QUADRANT                                     : [u8; 2] = [0x00, 0xF0];
// pub const GPH__SPARE_0                                                               : [u8; 2] = [0x00, 0xF1];
// pub const GPH__SD_CONFIG__WOI_SD0                                                    : [u8; 2] = [0x00, 0xF2];
// pub const GPH__SD_CONFIG__WOI_SD1                                                    : [u8; 2] = [0x00, 0xF3];
// pub const GPH__SD_CONFIG__INITIAL_PHASE_SD0                                          : [u8; 2] = [0x00, 0xF4];
// pub const GPH__SD_CONFIG__INITIAL_PHASE_SD1                                          : [u8; 2] = [0x00, 0xF5];
// pub const GPH__SD_CONFIG__FIRST_ORDER_SELECT                                         : [u8; 2] = [0x00, 0xF6];
// pub const GPH__SD_CONFIG__QUANTIFIER                                                 : [u8; 2] = [0x00, 0xF7];
// pub const GPH__ROI_CONFIG__USER_ROI_CENTRE_SPAD                                      : [u8; 2] = [0x00, 0xF8];
// pub const GPH__ROI_CONFIG__USER_ROI_REQUESTED_GLOBAL_XY_SIZE                         : [u8; 2] = [0x00, 0xF9];
// pub const GPH__SYSTEM__SEQUENCE_CONFIG                                               : [u8; 2] = [0x00, 0xFA];
// pub const GPH__GPH_ID                                                                : [u8; 2] = [0x00, 0xFB];
// pub const SYSTEM__INTERRUPT_SET                                                      : [u8; 2] = [0x00, 0xFC];
// pub const INTERRUPT_MANAGER__ENABLES                                                 : [u8; 2] = [0x00, 0xFD];
// pub const INTERRUPT_MANAGER__CLEAR                                                   : [u8; 2] = [0x00, 0xFE];
// pub const INTERRUPT_MANAGER__STATUS                                                  : [u8; 2] = [0x00, 0xFF];
// pub const MCU_TO_HOST_BANK__WR_ACCESS_EN                                             : [u8; 2] = [0x01, 0x00];
// pub const POWER_MANAGEMENT__GO1_RESET_STATUS                                         : [u8; 2] = [0x01, 0x01];
// pub const PAD_STARTUP_MODE__VALUE_RO                                                 : [u8; 2] = [0x01, 0x02];
// pub const PAD_STARTUP_MODE__VALUE_CTRL                                               : [u8; 2] = [0x01, 0x03];
// pub const PLL_PERIOD_US                                                              : [u8; 2] = [0x01, 0x04];
// pub const PLL_PERIOD_US_3                                                            : [u8; 2] = [0x01, 0x04];
// pub const PLL_PERIOD_US_2                                                            : [u8; 2] = [0x01, 0x05];
// pub const PLL_PERIOD_US_1                                                            : [u8; 2] = [0x01, 0x06];
// pub const PLL_PERIOD_US_0                                                            : [u8; 2] = [0x01, 0x07];
// pub const INTERRUPT_SCHEDULER__DATA_OUT                                              : [u8; 2] = [0x01, 0x08];
// pub const INTERRUPT_SCHEDULER__DATA_OUT_3                                            : [u8; 2] = [0x01, 0x08];
// pub const INTERRUPT_SCHEDULER__DATA_OUT_2                                            : [u8; 2] = [0x01, 0x09];
// pub const INTERRUPT_SCHEDULER__DATA_OUT_1                                            : [u8; 2] = [0x01, 0x0A];
// pub const INTERRUPT_SCHEDULER__DATA_OUT_0                                            : [u8; 2] = [0x01, 0x0B];
// pub const NVM_BIST__COMPLETE                                                         : [u8; 2] = [0x01, 0x0C];
// pub const NVM_BIST__STATUS                                                           : [u8; 2] = [0x01, 0x0D];
pub const IDENTIFICATION__MODEL_ID: [u8; 2] = [0x01, 0x0F];
// pub const IDENTIFICATION__MODULE_TYPE                                                : [u8; 2] = [0x01, 0x10];
// pub const IDENTIFICATION__REVISION_ID                                                : [u8; 2] = [0x01, 0x11];
// pub const IDENTIFICATION__MODULE_ID                                                  : [u8; 2] = [0x01, 0x12];
// pub const IDENTIFICATION__MODULE_ID_HI                                               : [u8; 2] = [0x01, 0x12];
// pub const IDENTIFICATION__MODULE_ID_LO                                               : [u8; 2] = [0x01, 0x13];
// pub const ANA_CONFIG__FAST_OSC__TRIM_MAX                                             : [u8; 2] = [0x01, 0x14];
// pub const ANA_CONFIG__FAST_OSC__FREQ_SET                                             : [u8; 2] = [0x01, 0x15];
// pub const ANA_CONFIG__VCSEL_TRIM                                                     : [u8; 2] = [0x01, 0x16];
// pub const ANA_CONFIG__VCSEL_SELION                                                   : [u8; 2] = [0x01, 0x17];
// pub const ANA_CONFIG__VCSEL_SELION_MAX                                               : [u8; 2] = [0x01, 0x18];
// pub const PROTECTED_LASER_SAFETY__LOCK_BIT                                           : [u8; 2] = [0x01, 0x19];
// pub const LASER_SAFETY__KEY                                                          : [u8; 2] = [0x01, 0x1A];
// pub const LASER_SAFETY__KEY_RO                                                       : [u8; 2] = [0x01, 0x1B];
// pub const LASER_SAFETY__CLIP                                                         : [u8; 2] = [0x01, 0x1C];
// pub const LASER_SAFETY__MULT                                                         : [u8; 2] = [0x01, 0x1D];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_0                                          : [u8; 2] = [0x01, 0x1E];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_1                                          : [u8; 2] = [0x01, 0x1F];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_2                                          : [u8; 2] = [0x01, 0x20];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_3                                          : [u8; 2] = [0x01, 0x21];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_4                                          : [u8; 2] = [0x01, 0x22];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_5                                          : [u8; 2] = [0x01, 0x23];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_6                                          : [u8; 2] = [0x01, 0x24];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_7                                          : [u8; 2] = [0x01, 0x25];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_8                                          : [u8; 2] = [0x01, 0x26];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_9                                          : [u8; 2] = [0x01, 0x27];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_10                                         : [u8; 2] = [0x01, 0x28];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_11                                         : [u8; 2] = [0x01, 0x29];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_12                                         : [u8; 2] = [0x01, 0x2A];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_13                                         : [u8; 2] = [0x01, 0x2B];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_14                                         : [u8; 2] = [0x01, 0x2C];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_15                                         : [u8; 2] = [0x01, 0x2D];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_16                                         : [u8; 2] = [0x01, 0x2E];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_17                                         : [u8; 2] = [0x01, 0x2F];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_18                                         : [u8; 2] = [0x01, 0x30];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_19                                         : [u8; 2] = [0x01, 0x31];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_20                                         : [u8; 2] = [0x01, 0x32];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_21                                         : [u8; 2] = [0x01, 0x33];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_22                                         : [u8; 2] = [0x01, 0x34];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_23                                         : [u8; 2] = [0x01, 0x35];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_24                                         : [u8; 2] = [0x01, 0x36];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_25                                         : [u8; 2] = [0x01, 0x37];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_26                                         : [u8; 2] = [0x01, 0x38];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_27                                         : [u8; 2] = [0x01, 0x39];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_28                                         : [u8; 2] = [0x01, 0x3A];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_29                                         : [u8; 2] = [0x01, 0x3B];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_30                                         : [u8; 2] = [0x01, 0x3C];
// pub const GLOBAL_CONFIG__SPAD_ENABLES_RTN_31                                         : [u8; 2] = [0x01, 0x3D];
// pub const ROI_CONFIG__MODE_ROI_CENTRE_SPAD                                           : [u8; 2] = [0x01, 0x3E];
// pub const ROI_CONFIG__MODE_ROI_XY_SIZE                                               : [u8; 2] = [0x01, 0x3F];
// pub const GO2_HOST_BANK_ACCESS__OVERRIDE                                             : [u8; 2] = [0x03, 0x00];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLICAND                                          : [u8; 2] = [0x04, 0x00];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLICAND_3                                        : [u8; 2] = [0x04, 0x00];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLICAND_2                                        : [u8; 2] = [0x04, 0x01];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLICAND_1                                        : [u8; 2] = [0x04, 0x02];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLICAND_0                                        : [u8; 2] = [0x04, 0x03];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLIER                                            : [u8; 2] = [0x04, 0x04];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLIER_3                                          : [u8; 2] = [0x04, 0x04];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLIER_2                                          : [u8; 2] = [0x04, 0x05];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLIER_1                                          : [u8; 2] = [0x04, 0x06];
// pub const MCU_UTIL_MULTIPLIER__MULTIPLIER_0                                          : [u8; 2] = [0x04, 0x07];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_HI                                            : [u8; 2] = [0x04, 0x08];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_HI_3                                          : [u8; 2] = [0x04, 0x08];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_HI_2                                          : [u8; 2] = [0x04, 0x09];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_HI_1                                          : [u8; 2] = [0x04, 0x0A];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_HI_0                                          : [u8; 2] = [0x04, 0x0B];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_LO                                            : [u8; 2] = [0x04, 0x0C];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_LO_3                                          : [u8; 2] = [0x04, 0x0C];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_LO_2                                          : [u8; 2] = [0x04, 0x0D];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_LO_1                                          : [u8; 2] = [0x04, 0x0E];
// pub const MCU_UTIL_MULTIPLIER__PRODUCT_LO_0                                          : [u8; 2] = [0x04, 0x0F];
// pub const MCU_UTIL_MULTIPLIER__START                                                 : [u8; 2] = [0x04, 0x10];
// pub const MCU_UTIL_MULTIPLIER__STATUS                                                : [u8; 2] = [0x04, 0x11];
// pub const MCU_UTIL_DIVIDER__START                                                    : [u8; 2] = [0x04, 0x12];
// pub const MCU_UTIL_DIVIDER__STATUS                                                   : [u8; 2] = [0x04, 0x13];
// pub const MCU_UTIL_DIVIDER__DIVIDEND                                                 : [u8; 2] = [0x04, 0x14];
// pub const MCU_UTIL_DIVIDER__DIVIDEND_3                                               : [u8; 2] = [0x04, 0x14];
// pub const MCU_UTIL_DIVIDER__DIVIDEND_2                                               : [u8; 2] = [0x04, 0x15];
// pub const MCU_UTIL_DIVIDER__DIVIDEND_1                                               : [u8; 2] = [0x04, 0x16];
// pub const MCU_UTIL_DIVIDER__DIVIDEND_0                                               : [u8; 2] = [0x04, 0x17];
// pub const MCU_UTIL_DIVIDER__DIVISOR                                                  : [u8; 2] = [0x04, 0x18];
// pub const MCU_UTIL_DIVIDER__DIVISOR_3                                                : [u8; 2] = [0x04, 0x18];
// pub const MCU_UTIL_DIVIDER__DIVISOR_2                                                : [u8; 2] = [0x04, 0x19];
// pub const MCU_UTIL_DIVIDER__DIVISOR_1                                                : [u8; 2] = [0x04, 0x1A];
// pub const MCU_UTIL_DIVIDER__DIVISOR_0                                                : [u8; 2] = [0x04, 0x1B];
// pub const MCU_UTIL_DIVIDER__QUOTIENT                                                 : [u8; 2] = [0x04, 0x1C];
// pub const MCU_UTIL_DIVIDER__QUOTIENT_3                                               : [u8; 2] = [0x04, 0x1C];
// pub const MCU_UTIL_DIVIDER__QUOTIENT_2                                               : [u8; 2] = [0x04, 0x1D];
// pub const MCU_UTIL_DIVIDER__QUOTIENT_1                                               : [u8; 2] = [0x04, 0x1E];
// pub const MCU_UTIL_DIVIDER__QUOTIENT_0                                               : [u8; 2] = [0x04, 0x1F];
// pub const TIMER0__VALUE_IN                                                           : [u8; 2] = [0x04, 0x20];
// pub const TIMER0__VALUE_IN_3                                                         : [u8; 2] = [0x04, 0x20];
// pub const TIMER0__VALUE_IN_2                                                         : [u8; 2] = [0x04, 0x21];
// pub const TIMER0__VALUE_IN_1                                                         : [u8; 2] = [0x04, 0x22];
// pub const TIMER0__VALUE_IN_0                                                         : [u8; 2] = [0x04, 0x23];
// pub const TIMER1__VALUE_IN                                                           : [u8; 2] = [0x04, 0x24];
// pub const TIMER1__VALUE_IN_3                                                         : [u8; 2] = [0x04, 0x24];
// pub const TIMER1__VALUE_IN_2                                                         : [u8; 2] = [0x04, 0x25];
// pub const TIMER1__VALUE_IN_1                                                         : [u8; 2] = [0x04, 0x26];
// pub const TIMER1__VALUE_IN_0                                                         : [u8; 2] = [0x04, 0x27];
// pub const TIMER0__CTRL                                                               : [u8; 2] = [0x04, 0x28];
// pub const TIMER1__CTRL                                                               : [u8; 2] = [0x04, 0x29];
// pub const MCU_GENERAL_PURPOSE__GP_0                                                  : [u8; 2] = [0x04, 0x2C];
// pub const MCU_GENERAL_PURPOSE__GP_1                                                  : [u8; 2] = [0x04, 0x2D];
// pub const MCU_GENERAL_PURPOSE__GP_2                                                  : [u8; 2] = [0x04, 0x2E];
// pub const MCU_GENERAL_PURPOSE__GP_3                                                  : [u8; 2] = [0x04, 0x2F];
// pub const MCU_RANGE_CALC__CONFIG                                                     : [u8; 2] = [0x04, 0x30];
// pub const MCU_RANGE_CALC__OFFSET_CORRECTED_RANGE                                     : [u8; 2] = [0x04, 0x32];
// pub const MCU_RANGE_CALC__OFFSET_CORRECTED_RANGE_HI                                  : [u8; 2] = [0x04, 0x32];
// pub const MCU_RANGE_CALC__OFFSET_CORRECTED_RANGE_LO                                  : [u8; 2] = [0x04, 0x33];
// pub const MCU_RANGE_CALC__SPARE_4                                                    : [u8; 2] = [0x04, 0x34];
// pub const MCU_RANGE_CALC__SPARE_4_3                                                  : [u8; 2] = [0x04, 0x34];
// pub const MCU_RANGE_CALC__SPARE_4_2                                                  : [u8; 2] = [0x04, 0x35];
// pub const MCU_RANGE_CALC__SPARE_4_1                                                  : [u8; 2] = [0x04, 0x36];
// pub const MCU_RANGE_CALC__SPARE_4_0                                                  : [u8; 2] = [0x04, 0x37];
// pub const MCU_RANGE_CALC__AMBIENT_DURATION_PRE_CALC                                  : [u8; 2] = [0x04, 0x38];
// pub const MCU_RANGE_CALC__AMBIENT_DURATION_PRE_CALC_HI                               : [u8; 2] = [0x04, 0x38];
// pub const MCU_RANGE_CALC__AMBIENT_DURATION_PRE_CALC_LO                               : [u8; 2] = [0x04, 0x39];
// pub const MCU_RANGE_CALC__ALGO_VCSEL_PERIOD                                          : [u8; 2] = [0x04, 0x3C];
// pub const MCU_RANGE_CALC__SPARE_5                                                    : [u8; 2] = [0x04, 0x3D];
// pub const MCU_RANGE_CALC__ALGO_TOTAL_PERIODS                                         : [u8; 2] = [0x04, 0x3E];
// pub const MCU_RANGE_CALC__ALGO_TOTAL_PERIODS_HI                                      : [u8; 2] = [0x04, 0x3E];
// pub const MCU_RANGE_CALC__ALGO_TOTAL_PERIODS_LO                                      : [u8; 2] = [0x04, 0x3F];
// pub const MCU_RANGE_CALC__ALGO_ACCUM_PHASE                                           : [u8; 2] = [0x04, 0x40];
// pub const MCU_RANGE_CALC__ALGO_ACCUM_PHASE_3                                         : [u8; 2] = [0x04, 0x40];
// pub const MCU_RANGE_CALC__ALGO_ACCUM_PHASE_2                                         : [u8; 2] = [0x04, 0x41];
// pub const MCU_RANGE_CALC__ALGO_ACCUM_PHASE_1                                         : [u8; 2] = [0x04, 0x42];
// pub const MCU_RANGE_CALC__ALGO_ACCUM_PHASE_0                                         : [u8; 2] = [0x04, 0x43];
// pub const MCU_RANGE_CALC__ALGO_SIGNAL_EVENTS                                         : [u8; 2] = [0x04, 0x44];
// pub const MCU_RANGE_CALC__ALGO_SIGNAL_EVENTS_3                                       : [u8; 2] = [0x04, 0x44];
// pub const MCU_RANGE_CALC__ALGO_SIGNAL_EVENTS_2                                       : [u8; 2] = [0x04, 0x45];
// pub const MCU_RANGE_CALC__ALGO_SIGNAL_EVENTS_1                                       : [u8; 2] = [0x04, 0x46];
// pub const MCU_RANGE_CALC__ALGO_SIGNAL_EVENTS_0                                       : [u8; 2] = [0x04, 0x47];
// pub const MCU_RANGE_CALC__ALGO_AMBIENT_EVENTS                                        : [u8; 2] = [0x04, 0x48];
// pub const MCU_RANGE_CALC__ALGO_AMBIENT_EVENTS_3                                      : [u8; 2] = [0x04, 0x48];
// pub const MCU_RANGE_CALC__ALGO_AMBIENT_EVENTS_2                                      : [u8; 2] = [0x04, 0x49];
// pub const MCU_RANGE_CALC__ALGO_AMBIENT_EVENTS_1                                      : [u8; 2] = [0x04, 0x4A];
// pub const MCU_RANGE_CALC__ALGO_AMBIENT_EVENTS_0                                      : [u8; 2] = [0x04, 0x4B];
// pub const MCU_RANGE_CALC__SPARE_6                                                    : [u8; 2] = [0x04, 0x4C];
// pub const MCU_RANGE_CALC__SPARE_6_HI                                                 : [u8; 2] = [0x04, 0x4C];
// pub const MCU_RANGE_CALC__SPARE_6_LO                                                 : [u8; 2] = [0x04, 0x4D];
// pub const MCU_RANGE_CALC__ALGO_ADJUST_VCSEL_PERIOD                                   : [u8; 2] = [0x04, 0x4E];
// pub const MCU_RANGE_CALC__ALGO_ADJUST_VCSEL_PERIOD_HI                                : [u8; 2] = [0x04, 0x4E];
// pub const MCU_RANGE_CALC__ALGO_ADJUST_VCSEL_PERIOD_LO                                : [u8; 2] = [0x04, 0x4F];
// pub const MCU_RANGE_CALC__NUM_SPADS                                                  : [u8; 2] = [0x04, 0x50];
// pub const MCU_RANGE_CALC__NUM_SPADS_HI                                               : [u8; 2] = [0x04, 0x50];
// pub const MCU_RANGE_CALC__NUM_SPADS_LO                                               : [u8; 2] = [0x04, 0x51];
// pub const MCU_RANGE_CALC__PHASE_OUTPUT                                               : [u8; 2] = [0x04, 0x52];
// pub const MCU_RANGE_CALC__PHASE_OUTPUT_HI                                            : [u8; 2] = [0x04, 0x52];
// pub const MCU_RANGE_CALC__PHASE_OUTPUT_LO                                            : [u8; 2] = [0x04, 0x53];
// pub const MCU_RANGE_CALC__RATE_PER_SPAD_MCPS                                         : [u8; 2] = [0x04, 0x54];
// pub const MCU_RANGE_CALC__RATE_PER_SPAD_MCPS_3                                       : [u8; 2] = [0x04, 0x54];
// pub const MCU_RANGE_CALC__RATE_PER_SPAD_MCPS_2                                       : [u8; 2] = [0x04, 0x55];
// pub const MCU_RANGE_CALC__RATE_PER_SPAD_MCPS_1                                       : [u8; 2] = [0x04, 0x56];
// pub const MCU_RANGE_CALC__RATE_PER_SPAD_MCPS_0                                       : [u8; 2] = [0x04, 0x57];
// pub const MCU_RANGE_CALC__SPARE_7                                                    : [u8; 2] = [0x04, 0x58];
// pub const MCU_RANGE_CALC__SPARE_8                                                    : [u8; 2] = [0x04, 0x59];
// pub const MCU_RANGE_CALC__PEAK_SIGNAL_RATE_MCPS                                      : [u8; 2] = [0x04, 0x5A];
// pub const MCU_RANGE_CALC__PEAK_SIGNAL_RATE_MCPS_HI                                   : [u8; 2] = [0x04, 0x5A];
// pub const MCU_RANGE_CALC__PEAK_SIGNAL_RATE_MCPS_LO                                   : [u8; 2] = [0x04, 0x5B];
// pub const MCU_RANGE_CALC__AVG_SIGNAL_RATE_MCPS                                       : [u8; 2] = [0x04, 0x5C];
// pub const MCU_RANGE_CALC__AVG_SIGNAL_RATE_MCPS_HI                                    : [u8; 2] = [0x04, 0x5C];
// pub const MCU_RANGE_CALC__AVG_SIGNAL_RATE_MCPS_LO                                    : [u8; 2] = [0x04, 0x5D];
// pub const MCU_RANGE_CALC__AMBIENT_RATE_MCPS                                          : [u8; 2] = [0x04, 0x5E];
// pub const MCU_RANGE_CALC__AMBIENT_RATE_MCPS_HI                                       : [u8; 2] = [0x04, 0x5E];
// pub const MCU_RANGE_CALC__AMBIENT_RATE_MCPS_LO                                       : [u8; 2] = [0x04, 0x5F];
// pub const MCU_RANGE_CALC__XTALK                                                      : [u8; 2] = [0x04, 0x60];
// pub const MCU_RANGE_CALC__XTALK_HI                                                   : [u8; 2] = [0x04, 0x60];
// pub const MCU_RANGE_CALC__XTALK_LO                                                   : [u8; 2] = [0x04, 0x61];
// pub const MCU_RANGE_CALC__CALC_STATUS                                                : [u8; 2] = [0x04, 0x62];
// pub const MCU_RANGE_CALC__DEBUG                                                      : [u8; 2] = [0x04, 0x63];
// pub const MCU_RANGE_CALC__PEAK_SIGNAL_RATE_XTALK_CORR_MCPS                           : [u8; 2] = [0x04, 0x64];
// pub const MCU_RANGE_CALC__PEAK_SIGNAL_RATE_XTALK_CORR_MCPS_HI                        : [u8; 2] = [0x04, 0x64];
// pub const MCU_RANGE_CALC__PEAK_SIGNAL_RATE_XTALK_CORR_MCPS_LO                        : [u8; 2] = [0x04, 0x65];
// pub const MCU_RANGE_CALC__SPARE_0                                                    : [u8; 2] = [0x04, 0x68];
// pub const MCU_RANGE_CALC__SPARE_1                                                    : [u8; 2] = [0x04, 0x69];
// pub const MCU_RANGE_CALC__SPARE_2                                                    : [u8; 2] = [0x04, 0x6A];
// pub const MCU_RANGE_CALC__SPARE_3                                                    : [u8; 2] = [0x04, 0x6B];
// pub const PATCH__CTRL                                                                : [u8; 2] = [0x04, 0x70];
// pub const PATCH__JMP_ENABLES                                                         : [u8; 2] = [0x04, 0x72];
// pub const PATCH__JMP_ENABLES_HI                                                      : [u8; 2] = [0x04, 0x72];
// pub const PATCH__JMP_ENABLES_LO                                                      : [u8; 2] = [0x04, 0x73];
// pub const PATCH__DATA_ENABLES                                                        : [u8; 2] = [0x04, 0x74];
// pub const PATCH__DATA_ENABLES_HI                                                     : [u8; 2] = [0x04, 0x74];
// pub const PATCH__DATA_ENABLES_LO                                                     : [u8; 2] = [0x04, 0x75];
// pub const PATCH__OFFSET_0                                                            : [u8; 2] = [0x04, 0x76];
// pub const PATCH__OFFSET_0_HI                                                         : [u8; 2] = [0x04, 0x76];
// pub const PATCH__OFFSET_0_LO                                                         : [u8; 2] = [0x04, 0x77];
// pub const PATCH__OFFSET_1                                                            : [u8; 2] = [0x04, 0x78];
// pub const PATCH__OFFSET_1_HI                                                         : [u8; 2] = [0x04, 0x78];
// pub const PATCH__OFFSET_1_LO                                                         : [u8; 2] = [0x04, 0x79];
// pub const PATCH__OFFSET_2                                                            : [u8; 2] = [0x04, 0x7A];
// pub const PATCH__OFFSET_2_HI                                                         : [u8; 2] = [0x04, 0x7A];
// pub const PATCH__OFFSET_2_LO                                                         : [u8; 2] = [0x04, 0x7B];
// pub const PATCH__OFFSET_3                                                            : [u8; 2] = [0x04, 0x7C];
// pub const PATCH__OFFSET_3_HI                                                         : [u8; 2] = [0x04, 0x7C];
// pub const PATCH__OFFSET_3_LO                                                         : [u8; 2] = [0x04, 0x7D];
// pub const PATCH__OFFSET_4                                                            : [u8; 2] = [0x04, 0x7E];
// pub const PATCH__OFFSET_4_HI                                                         : [u8; 2] = [0x04, 0x7E];
// pub const PATCH__OFFSET_4_LO                                                         : [u8; 2] = [0x04, 0x7F];
// pub const PATCH__OFFSET_5                                                            : [u8; 2] = [0x04, 0x80];
// pub const PATCH__OFFSET_5_HI                                                         : [u8; 2] = [0x04, 0x80];
// pub const PATCH__OFFSET_5_LO                                                         : [u8; 2] = [0x04, 0x81];
// pub const PATCH__OFFSET_6                                                            : [u8; 2] = [0x04, 0x82];
// pub const PATCH__OFFSET_6_HI                                                         : [u8; 2] = [0x04, 0x82];
// pub const PATCH__OFFSET_6_LO                                                         : [u8; 2] = [0x04, 0x83];
// pub const PATCH__OFFSET_7                                                            : [u8; 2] = [0x04, 0x84];
// pub const PATCH__OFFSET_7_HI                                                         : [u8; 2] = [0x04, 0x84];
// pub const PATCH__OFFSET_7_LO                                                         : [u8; 2] = [0x04, 0x85];
// pub const PATCH__OFFSET_8                                                            : [u8; 2] = [0x04, 0x86];
// pub const PATCH__OFFSET_8_HI                                                         : [u8; 2] = [0x04, 0x86];
// pub const PATCH__OFFSET_8_LO                                                         : [u8; 2] = [0x04, 0x87];
// pub const PATCH__OFFSET_9                                                            : [u8; 2] = [0x04, 0x88];
// pub const PATCH__OFFSET_9_HI                                                         : [u8; 2] = [0x04, 0x88];
// pub const PATCH__OFFSET_9_LO                                                         : [u8; 2] = [0x04, 0x89];
// pub const PATCH__OFFSET_10                                                           : [u8; 2] = [0x04, 0x8A];
// pub const PATCH__OFFSET_10_HI                                                        : [u8; 2] = [0x04, 0x8A];
// pub const PATCH__OFFSET_10_LO                                                        : [u8; 2] = [0x04, 0x8B];
// pub const PATCH__OFFSET_11                                                           : [u8; 2] = [0x04, 0x8C];
// pub const PATCH__OFFSET_11_HI                                                        : [u8; 2] = [0x04, 0x8C];
// pub const PATCH__OFFSET_11_LO                                                        : [u8; 2] = [0x04, 0x8D];
// pub const PATCH__OFFSET_12                                                           : [u8; 2] = [0x04, 0x8E];
// pub const PATCH__OFFSET_12_HI                                                        : [u8; 2] = [0x04, 0x8E];
// pub const PATCH__OFFSET_12_LO                                                        : [u8; 2] = [0x04, 0x8F];
// pub const PATCH__OFFSET_13                                                           : [u8; 2] = [0x04, 0x90];
// pub const PATCH__OFFSET_13_HI                                                        : [u8; 2] = [0x04, 0x90];
// pub const PATCH__OFFSET_13_LO                                                        : [u8; 2] = [0x04, 0x91];
// pub const PATCH__OFFSET_14                                                           : [u8; 2] = [0x04, 0x92];
// pub const PATCH__OFFSET_14_HI                                                        : [u8; 2] = [0x04, 0x92];
// pub const PATCH__OFFSET_14_LO                                                        : [u8; 2] = [0x04, 0x93];
// pub const PATCH__OFFSET_15                                                           : [u8; 2] = [0x04, 0x94];
// pub const PATCH__OFFSET_15_HI                                                        : [u8; 2] = [0x04, 0x94];
// pub const PATCH__OFFSET_15_LO                                                        : [u8; 2] = [0x04, 0x95];
// pub const PATCH__ADDRESS_0                                                           : [u8; 2] = [0x04, 0x96];
// pub const PATCH__ADDRESS_0_HI                                                        : [u8; 2] = [0x04, 0x96];
// pub const PATCH__ADDRESS_0_LO                                                        : [u8; 2] = [0x04, 0x97];
// pub const PATCH__ADDRESS_1                                                           : [u8; 2] = [0x04, 0x98];
// pub const PATCH__ADDRESS_1_HI                                                        : [u8; 2] = [0x04, 0x98];
// pub const PATCH__ADDRESS_1_LO                                                        : [u8; 2] = [0x04, 0x99];
// pub const PATCH__ADDRESS_2                                                           : [u8; 2] = [0x04, 0x9A];
// pub const PATCH__ADDRESS_2_HI                                                        : [u8; 2] = [0x04, 0x9A];
// pub const PATCH__ADDRESS_2_LO                                                        : [u8; 2] = [0x04, 0x9B];
// pub const PATCH__ADDRESS_3                                                           : [u8; 2] = [0x04, 0x9C];
// pub const PATCH__ADDRESS_3_HI                                                        : [u8; 2] = [0x04, 0x9C];
// pub const PATCH__ADDRESS_3_LO                                                        : [u8; 2] = [0x04, 0x9D];
// pub const PATCH__ADDRESS_4                                                           : [u8; 2] = [0x04, 0x9E];
// pub const PATCH__ADDRESS_4_HI                                                        : [u8; 2] = [0x04, 0x9E];
// pub const PATCH__ADDRESS_4_LO                                                        : [u8; 2] = [0x04, 0x9F];
// pub const PATCH__ADDRESS_5                                                           : [u8; 2] = [0x04, 0xA0];
// pub const PATCH__ADDRESS_5_HI                                                        : [u8; 2] = [0x04, 0xA0];
// pub const PATCH__ADDRESS_5_LO                                                        : [u8; 2] = [0x04, 0xA1];
// pub const PATCH__ADDRESS_6                                                           : [u8; 2] = [0x04, 0xA2];
// pub const PATCH__ADDRESS_6_HI                                                        : [u8; 2] = [0x04, 0xA2];
// pub const PATCH__ADDRESS_6_LO                                                        : [u8; 2] = [0x04, 0xA3];
// pub const PATCH__ADDRESS_7                                                           : [u8; 2] = [0x04, 0xA4];
// pub const PATCH__ADDRESS_7_HI                                                        : [u8; 2] = [0x04, 0xA4];
// pub const PATCH__ADDRESS_7_LO                                                        : [u8; 2] = [0x04, 0xA5];
// pub const PATCH__ADDRESS_8                                                           : [u8; 2] = [0x04, 0xA6];
// pub const PATCH__ADDRESS_8_HI                                                        : [u8; 2] = [0x04, 0xA6];
// pub const PATCH__ADDRESS_8_LO                                                        : [u8; 2] = [0x04, 0xA7];
// pub const PATCH__ADDRESS_9                                                           : [u8; 2] = [0x04, 0xA8];
// pub const PATCH__ADDRESS_9_HI                                                        : [u8; 2] = [0x04, 0xA8];
// pub const PATCH__ADDRESS_9_LO                                                        : [u8; 2] = [0x04, 0xA9];
// pub const PATCH__ADDRESS_10                                                          : [u8; 2] = [0x04, 0xAA];
// pub const PATCH__ADDRESS_10_HI                                                       : [u8; 2] = [0x04, 0xAA];
// pub const PATCH__ADDRESS_10_LO                                                       : [u8; 2] = [0x04, 0xAB];
// pub const PATCH__ADDRESS_11                                                          : [u8; 2] = [0x04, 0xAC];
// pub const PATCH__ADDRESS_11_HI                                                       : [u8; 2] = [0x04, 0xAC];
// pub const PATCH__ADDRESS_11_LO                                                       : [u8; 2] = [0x04, 0xAD];
// pub const PATCH__ADDRESS_12                                                          : [u8; 2] = [0x04, 0xAE];
// pub const PATCH__ADDRESS_12_HI                                                       : [u8; 2] = [0x04, 0xAE];
// pub const PATCH__ADDRESS_12_LO                                                       : [u8; 2] = [0x04, 0xAF];
// pub const PATCH__ADDRESS_13                                                          : [u8; 2] = [0x04, 0xB0];
// pub const PATCH__ADDRESS_13_HI                                                       : [u8; 2] = [0x04, 0xB0];
// pub const PATCH__ADDRESS_13_LO                                                       : [u8; 2] = [0x04, 0xB1];
// pub const PATCH__ADDRESS_14                                                          : [u8; 2] = [0x04, 0xB2];
// pub const PATCH__ADDRESS_14_HI                                                       : [u8; 2] = [0x04, 0xB2];
// pub const PATCH__ADDRESS_14_LO                                                       : [u8; 2] = [0x04, 0xB3];
// pub const PATCH__ADDRESS_15                                                          : [u8; 2] = [0x04, 0xB4];
// pub const PATCH__ADDRESS_15_HI                                                       : [u8; 2] = [0x04, 0xB4];
// pub const PATCH__ADDRESS_15_LO                                                       : [u8; 2] = [0x04, 0xB5];
// pub const SPI_ASYNC_MUX__CTRL                                                        : [u8; 2] = [0x04, 0xC0];
// pub const CLK__CONFIG                                                                : [u8; 2] = [0x04, 0xC4];
// pub const GPIO_LV_MUX__CTRL                                                          : [u8; 2] = [0x04, 0xCC];
// pub const GPIO_LV_PAD__CTRL                                                          : [u8; 2] = [0x04, 0xCD];
// pub const PAD_I2C_LV__CONFIG                                                         : [u8; 2] = [0x04, 0xD0];
// pub const PAD_STARTUP_MODE__VALUE_RO_GO1                                             : [u8; 2] = [0x04, 0xD4];
// pub const HOST_IF__STATUS_GO1                                                        : [u8; 2] = [0x04, 0xD5];
// pub const MCU_CLK_GATING__CTRL                                                       : [u8; 2] = [0x04, 0xD8];
// pub const TEST__BIST_ROM_CTRL                                                        : [u8; 2] = [0x04, 0xE0];
// pub const TEST__BIST_ROM_RESULT                                                      : [u8; 2] = [0x04, 0xE1];
// pub const TEST__BIST_ROM_MCU_SIG                                                     : [u8; 2] = [0x04, 0xE2];
// pub const TEST__BIST_ROM_MCU_SIG_HI                                                  : [u8; 2] = [0x04, 0xE2];
// pub const TEST__BIST_ROM_MCU_SIG_LO                                                  : [u8; 2] = [0x04, 0xE3];
// pub const TEST__BIST_RAM_CTRL                                                        : [u8; 2] = [0x04, 0xE4];
// pub const TEST__BIST_RAM_RESULT                                                      : [u8; 2] = [0x04, 0xE5];
// pub const TEST__TMC                                                                  : [u8; 2] = [0x04, 0xE8];
// pub const TEST__PLL_BIST_MIN_THRESHOLD                                               : [u8; 2] = [0x04, 0xF0];
// pub const TEST__PLL_BIST_MIN_THRESHOLD_HI                                            : [u8; 2] = [0x04, 0xF0];
// pub const TEST__PLL_BIST_MIN_THRESHOLD_LO                                            : [u8; 2] = [0x04, 0xF1];
// pub const TEST__PLL_BIST_MAX_THRESHOLD                                               : [u8; 2] = [0x04, 0xF2];
// pub const TEST__PLL_BIST_MAX_THRESHOLD_HI                                            : [u8; 2] = [0x04, 0xF2];
// pub const TEST__PLL_BIST_MAX_THRESHOLD_LO                                            : [u8; 2] = [0x04, 0xF3];
// pub const TEST__PLL_BIST_COUNT_OUT                                                   : [u8; 2] = [0x04, 0xF4];
// pub const TEST__PLL_BIST_COUNT_OUT_HI                                                : [u8; 2] = [0x04, 0xF4];
// pub const TEST__PLL_BIST_COUNT_OUT_LO                                                : [u8; 2] = [0x04, 0xF5];
// pub const TEST__PLL_BIST_GONOGO                                                      : [u8; 2] = [0x04, 0xF6];
// pub const TEST__PLL_BIST_CTRL                                                        : [u8; 2] = [0x04, 0xF7];
// pub const RANGING_CORE__DEVICE_ID                                                    : [u8; 2] = [0x06, 0x80];
// pub const RANGING_CORE__REVISION_ID                                                  : [u8; 2] = [0x06, 0x81];
// pub const RANGING_CORE__CLK_CTRL1                                                    : [u8; 2] = [0x06, 0x83];
// pub const RANGING_CORE__CLK_CTRL2                                                    : [u8; 2] = [0x06, 0x84];
// pub const RANGING_CORE__WOI_1                                                        : [u8; 2] = [0x06, 0x85];
// pub const RANGING_CORE__WOI_REF_1                                                    : [u8; 2] = [0x06, 0x86];
// pub const RANGING_CORE__START_RANGING                                                : [u8; 2] = [0x06, 0x87];
// pub const RANGING_CORE__LOW_LIMIT_1                                                  : [u8; 2] = [0x06, 0x90];
// pub const RANGING_CORE__HIGH_LIMIT_1                                                 : [u8; 2] = [0x06, 0x91];
// pub const RANGING_CORE__LOW_LIMIT_REF_1                                              : [u8; 2] = [0x06, 0x92];
// pub const RANGING_CORE__HIGH_LIMIT_REF_1                                             : [u8; 2] = [0x06, 0x93];
// pub const RANGING_CORE__QUANTIFIER_1_MSB                                             : [u8; 2] = [0x06, 0x94];
// pub const RANGING_CORE__QUANTIFIER_1_LSB                                             : [u8; 2] = [0x06, 0x95];
// pub const RANGING_CORE__QUANTIFIER_REF_1_MSB                                         : [u8; 2] = [0x06, 0x96];
// pub const RANGING_CORE__QUANTIFIER_REF_1_LSB                                         : [u8; 2] = [0x06, 0x97];
// pub const RANGING_CORE__AMBIENT_OFFSET_1_MSB                                         : [u8; 2] = [0x06, 0x98];
// pub const RANGING_CORE__AMBIENT_OFFSET_1_LSB                                         : [u8; 2] = [0x06, 0x99];
// pub const RANGING_CORE__AMBIENT_OFFSET_REF_1_MSB                                     : [u8; 2] = [0x06, 0x9A];
// pub const RANGING_CORE__AMBIENT_OFFSET_REF_1_LSB                                     : [u8; 2] = [0x06, 0x9B];
// pub const RANGING_CORE__FILTER_STRENGTH_1                                            : [u8; 2] = [0x06, 0x9C];
// pub const RANGING_CORE__FILTER_STRENGTH_REF_1                                        : [u8; 2] = [0x06, 0x9D];
// pub const RANGING_CORE__SIGNAL_EVENT_LIMIT_1_MSB                                     : [u8; 2] = [0x06, 0x9E];
// pub const RANGING_CORE__SIGNAL_EVENT_LIMIT_1_LSB                                     : [u8; 2] = [0x06, 0x9F];
// pub const RANGING_CORE__SIGNAL_EVENT_LIMIT_REF_1_MSB                                 : [u8; 2] = [0x06, 0xA0];
// pub const RANGING_CORE__SIGNAL_EVENT_LIMIT_REF_1_LSB                                 : [u8; 2] = [0x06, 0xA1];
// pub const RANGING_CORE__TIMEOUT_OVERALL_PERIODS_MSB                                  : [u8; 2] = [0x06, 0xA4];
// pub const RANGING_CORE__TIMEOUT_OVERALL_PERIODS_LSB                                  : [u8; 2] = [0x06, 0xA5];
// pub const RANGING_CORE__INVERT_HW                                                    : [u8; 2] = [0x06, 0xA6];
// pub const RANGING_CORE__FORCE_HW                                                     : [u8; 2] = [0x06, 0xA7];
// pub const RANGING_CORE__STATIC_HW_VALUE                                              : [u8; 2] = [0x06, 0xA8];
// pub const RANGING_CORE__FORCE_CONTINUOUS_AMBIENT                                     : [u8; 2] = [0x06, 0xA9];
// pub const RANGING_CORE__TEST_PHASE_SELECT_TO_FILTER                                  : [u8; 2] = [0x06, 0xAA];
// pub const RANGING_CORE__TEST_PHASE_SELECT_TO_TIMING_GEN                              : [u8; 2] = [0x06, 0xAB];
// pub const RANGING_CORE__INITIAL_PHASE_VALUE_1                                        : [u8; 2] = [0x06, 0xAC];
// pub const RANGING_CORE__INITIAL_PHASE_VALUE_REF_1                                    : [u8; 2] = [0x06, 0xAD];
// pub const RANGING_CORE__FORCE_UP_IN                                                  : [u8; 2] = [0x06, 0xAE];
// pub const RANGING_CORE__FORCE_DN_IN                                                  : [u8; 2] = [0x06, 0xAF];
// pub const RANGING_CORE__STATIC_UP_VALUE_1                                            : [u8; 2] = [0x06, 0xB0];
// pub const RANGING_CORE__STATIC_UP_VALUE_REF_1                                        : [u8; 2] = [0x06, 0xB1];
// pub const RANGING_CORE__STATIC_DN_VALUE_1                                            : [u8; 2] = [0x06, 0xB2];
// pub const RANGING_CORE__STATIC_DN_VALUE_REF_1                                        : [u8; 2] = [0x06, 0xB3];
// pub const RANGING_CORE__MONITOR_UP_DN                                                : [u8; 2] = [0x06, 0xB4];
// pub const RANGING_CORE__INVERT_UP_DN                                                 : [u8; 2] = [0x06, 0xB5];
// pub const RANGING_CORE__CPUMP_1                                                      : [u8; 2] = [0x06, 0xB6];
// pub const RANGING_CORE__CPUMP_2                                                      : [u8; 2] = [0x06, 0xB7];
// pub const RANGING_CORE__CPUMP_3                                                      : [u8; 2] = [0x06, 0xB8];
// pub const RANGING_CORE__OSC_1                                                        : [u8; 2] = [0x06, 0xB9];
// pub const RANGING_CORE__PLL_1                                                        : [u8; 2] = [0x06, 0xBB];
// pub const RANGING_CORE__PLL_2                                                        : [u8; 2] = [0x06, 0xBC];
// pub const RANGING_CORE__REFERENCE_1                                                  : [u8; 2] = [0x06, 0xBD];
// pub const RANGING_CORE__REFERENCE_3                                                  : [u8; 2] = [0x06, 0xBF];
// pub const RANGING_CORE__REFERENCE_4                                                  : [u8; 2] = [0x06, 0xC0];
// pub const RANGING_CORE__REFERENCE_5                                                  : [u8; 2] = [0x06, 0xC1];
// pub const RANGING_CORE__REGAVDD1V2                                                   : [u8; 2] = [0x06, 0xC3];
// pub const RANGING_CORE__CALIB_1                                                      : [u8; 2] = [0x06, 0xC4];
// pub const RANGING_CORE__CALIB_2                                                      : [u8; 2] = [0x06, 0xC5];
// pub const RANGING_CORE__CALIB_3                                                      : [u8; 2] = [0x06, 0xC6];
// pub const RANGING_CORE__TST_MUX_SEL1                                                 : [u8; 2] = [0x06, 0xC9];
// pub const RANGING_CORE__TST_MUX_SEL2                                                 : [u8; 2] = [0x06, 0xCA];
// pub const RANGING_CORE__TST_MUX                                                      : [u8; 2] = [0x06, 0xCB];
// pub const RANGING_CORE__GPIO_OUT_TESTMUX                                             : [u8; 2] = [0x06, 0xCC];
// pub const RANGING_CORE__CUSTOM_FE                                                    : [u8; 2] = [0x06, 0xCD];
// pub const RANGING_CORE__CUSTOM_FE_2                                                  : [u8; 2] = [0x06, 0xCE];
// pub const RANGING_CORE__SPAD_READOUT                                                 : [u8; 2] = [0x06, 0xCF];
// pub const RANGING_CORE__SPAD_READOUT_1                                               : [u8; 2] = [0x06, 0xD0];
// pub const RANGING_CORE__SPAD_READOUT_2                                               : [u8; 2] = [0x06, 0xD1];
// pub const RANGING_CORE__SPAD_PS                                                      : [u8; 2] = [0x06, 0xD2];
// pub const RANGING_CORE__LASER_SAFETY_2                                               : [u8; 2] = [0x06, 0xD4];
// pub const RANGING_CORE__NVM_CTRL__MODE                                               : [u8; 2] = [0x07, 0x80];
// pub const RANGING_CORE__NVM_CTRL__PDN                                                : [u8; 2] = [0x07, 0x81];
// pub const RANGING_CORE__NVM_CTRL__PROGN                                              : [u8; 2] = [0x07, 0x82];
// pub const RANGING_CORE__NVM_CTRL__READN                                              : [u8; 2] = [0x07, 0x83];
// pub const RANGING_CORE__NVM_CTRL__PULSE_WIDTH_MSB                                    : [u8; 2] = [0x07, 0x84];
// pub const RANGING_CORE__NVM_CTRL__PULSE_WIDTH_LSB                                    : [u8; 2] = [0x07, 0x85];
// pub const RANGING_CORE__NVM_CTRL__HV_RISE_MSB                                        : [u8; 2] = [0x07, 0x86];
// pub const RANGING_CORE__NVM_CTRL__HV_RISE_LSB                                        : [u8; 2] = [0x07, 0x87];
// pub const RANGING_CORE__NVM_CTRL__HV_FALL_MSB                                        : [u8; 2] = [0x07, 0x88];
// pub const RANGING_CORE__NVM_CTRL__HV_FALL_LSB                                        : [u8; 2] = [0x07, 0x89];
// pub const RANGING_CORE__NVM_CTRL__TST                                                : [u8; 2] = [0x07, 0x8A];
// pub const RANGING_CORE__NVM_CTRL__TESTREAD                                           : [u8; 2] = [0x07, 0x8B];
// pub const RANGING_CORE__NVM_CTRL__DATAIN_MMM                                         : [u8; 2] = [0x07, 0x8C];
// pub const RANGING_CORE__NVM_CTRL__DATAIN_LMM                                         : [u8; 2] = [0x07, 0x8D];
// pub const RANGING_CORE__NVM_CTRL__DATAIN_LLM                                         : [u8; 2] = [0x07, 0x8E];
// pub const RANGING_CORE__NVM_CTRL__DATAIN_LLL                                         : [u8; 2] = [0x07, 0x8F];
// pub const RANGING_CORE__NVM_CTRL__DATAOUT_MMM                                        : [u8; 2] = [0x07, 0x90];
// pub const RANGING_CORE__NVM_CTRL__DATAOUT_LMM                                        : [u8; 2] = [0x07, 0x91];
// pub const RANGING_CORE__NVM_CTRL__DATAOUT_LLM                                        : [u8; 2] = [0x07, 0x92];
// pub const RANGING_CORE__NVM_CTRL__DATAOUT_LLL                                        : [u8; 2] = [0x07, 0x93];
// pub const RANGING_CORE__NVM_CTRL__ADDR                                               : [u8; 2] = [0x07, 0x94];
// pub const RANGING_CORE__NVM_CTRL__DATAOUT_ECC                                        : [u8; 2] = [0x07, 0x95];
// pub const RANGING_CORE__RET_SPAD_EN_0                                                : [u8; 2] = [0x07, 0x96];
// pub const RANGING_CORE__RET_SPAD_EN_1                                                : [u8; 2] = [0x07, 0x97];
// pub const RANGING_CORE__RET_SPAD_EN_2                                                : [u8; 2] = [0x07, 0x98];
// pub const RANGING_CORE__RET_SPAD_EN_3                                                : [u8; 2] = [0x07, 0x99];
// pub const RANGING_CORE__RET_SPAD_EN_4                                                : [u8; 2] = [0x07, 0x9A];
// pub const RANGING_CORE__RET_SPAD_EN_5                                                : [u8; 2] = [0x07, 0x9B];
// pub const RANGING_CORE__RET_SPAD_EN_6                                                : [u8; 2] = [0x07, 0x9C];
// pub const RANGING_CORE__RET_SPAD_EN_7                                                : [u8; 2] = [0x07, 0x9D];
// pub const RANGING_CORE__RET_SPAD_EN_8                                                : [u8; 2] = [0x07, 0x9E];
// pub const RANGING_CORE__RET_SPAD_EN_9                                                : [u8; 2] = [0x07, 0x9F];
// pub const RANGING_CORE__RET_SPAD_EN_10                                               : [u8; 2] = [0x07, 0xA0];
// pub const RANGING_CORE__RET_SPAD_EN_11                                               : [u8; 2] = [0x07, 0xA1];
// pub const RANGING_CORE__RET_SPAD_EN_12                                               : [u8; 2] = [0x07, 0xA2];
// pub const RANGING_CORE__RET_SPAD_EN_13                                               : [u8; 2] = [0x07, 0xA3];
// pub const RANGING_CORE__RET_SPAD_EN_14                                               : [u8; 2] = [0x07, 0xA4];
// pub const RANGING_CORE__RET_SPAD_EN_15                                               : [u8; 2] = [0x07, 0xA5];
// pub const RANGING_CORE__RET_SPAD_EN_16                                               : [u8; 2] = [0x07, 0xA6];
// pub const RANGING_CORE__RET_SPAD_EN_17                                               : [u8; 2] = [0x07, 0xA7];
// pub const RANGING_CORE__SPAD_SHIFT_EN                                                : [u8; 2] = [0x07, 0xBA];
// pub const RANGING_CORE__SPAD_DISABLE_CTRL                                            : [u8; 2] = [0x07, 0xBB];
// pub const RANGING_CORE__SPAD_EN_SHIFT_OUT_DEBUG                                      : [u8; 2] = [0x07, 0xBC];
// pub const RANGING_CORE__SPI_MODE                                                     : [u8; 2] = [0x07, 0xBD];
// pub const RANGING_CORE__GPIO_DIR                                                     : [u8; 2] = [0x07, 0xBE];
// pub const RANGING_CORE__VCSEL_PERIOD                                                 : [u8; 2] = [0x08, 0x80];
// pub const RANGING_CORE__VCSEL_START                                                  : [u8; 2] = [0x08, 0x81];
// pub const RANGING_CORE__VCSEL_STOP                                                   : [u8; 2] = [0x08, 0x82];
// pub const RANGING_CORE__VCSEL_1                                                      : [u8; 2] = [0x08, 0x85];
// pub const RANGING_CORE__VCSEL_STATUS                                                 : [u8; 2] = [0x08, 0x8D];
// pub const RANGING_CORE__STATUS                                                       : [u8; 2] = [0x09, 0x80];
// pub const RANGING_CORE__LASER_CONTINUITY_STATE                                       : [u8; 2] = [0x09, 0x81];
// pub const RANGING_CORE__RANGE_1_MMM                                                  : [u8; 2] = [0x09, 0x82];
// pub const RANGING_CORE__RANGE_1_LMM                                                  : [u8; 2] = [0x09, 0x83];
// pub const RANGING_CORE__RANGE_1_LLM                                                  : [u8; 2] = [0x09, 0x84];
// pub const RANGING_CORE__RANGE_1_LLL                                                  : [u8; 2] = [0x09, 0x85];
// pub const RANGING_CORE__RANGE_REF_1_MMM                                              : [u8; 2] = [0x09, 0x86];
// pub const RANGING_CORE__RANGE_REF_1_LMM                                              : [u8; 2] = [0x09, 0x87];
// pub const RANGING_CORE__RANGE_REF_1_LLM                                              : [u8; 2] = [0x09, 0x88];
// pub const RANGING_CORE__RANGE_REF_1_LLL                                              : [u8; 2] = [0x09, 0x89];
// pub const RANGING_CORE__AMBIENT_WINDOW_EVENTS_1_MMM                                  : [u8; 2] = [0x09, 0x8A];
// pub const RANGING_CORE__AMBIENT_WINDOW_EVENTS_1_LMM                                  : [u8; 2] = [0x09, 0x8B];
// pub const RANGING_CORE__AMBIENT_WINDOW_EVENTS_1_LLM                                  : [u8; 2] = [0x09, 0x8C];
// pub const RANGING_CORE__AMBIENT_WINDOW_EVENTS_1_LLL                                  : [u8; 2] = [0x09, 0x8D];
// pub const RANGING_CORE__RANGING_TOTAL_EVENTS_1_MMM                                   : [u8; 2] = [0x09, 0x8E];
// pub const RANGING_CORE__RANGING_TOTAL_EVENTS_1_LMM                                   : [u8; 2] = [0x09, 0x8F];
// pub const RANGING_CORE__RANGING_TOTAL_EVENTS_1_LLM                                   : [u8; 2] = [0x09, 0x90];
// pub const RANGING_CORE__RANGING_TOTAL_EVENTS_1_LLL                                   : [u8; 2] = [0x09, 0x91];
// pub const RANGING_CORE__SIGNAL_TOTAL_EVENTS_1_MMM                                    : [u8; 2] = [0x09, 0x92];
// pub const RANGING_CORE__SIGNAL_TOTAL_EVENTS_1_LMM                                    : [u8; 2] = [0x09, 0x93];
// pub const RANGING_CORE__SIGNAL_TOTAL_EVENTS_1_LLM                                    : [u8; 2] = [0x09, 0x94];
// pub const RANGING_CORE__SIGNAL_TOTAL_EVENTS_1_LLL                                    : [u8; 2] = [0x09, 0x95];
// pub const RANGING_CORE__TOTAL_PERIODS_ELAPSED_1_MM                                   : [u8; 2] = [0x09, 0x96];
// pub const RANGING_CORE__TOTAL_PERIODS_ELAPSED_1_LM                                   : [u8; 2] = [0x09, 0x97];
// pub const RANGING_CORE__TOTAL_PERIODS_ELAPSED_1_LL                                   : [u8; 2] = [0x09, 0x98];
// pub const RANGING_CORE__AMBIENT_MISMATCH_MM                                          : [u8; 2] = [0x09, 0x99];
// pub const RANGING_CORE__AMBIENT_MISMATCH_LM                                          : [u8; 2] = [0x09, 0x9A];
// pub const RANGING_CORE__AMBIENT_MISMATCH_LL                                          : [u8; 2] = [0x09, 0x9B];
// pub const RANGING_CORE__AMBIENT_WINDOW_EVENTS_REF_1_MMM                              : [u8; 2] = [0x09, 0x9C];
// pub const RANGING_CORE__AMBIENT_WINDOW_EVENTS_REF_1_LMM                              : [u8; 2] = [0x09, 0x9D];
// pub const RANGING_CORE__AMBIENT_WINDOW_EVENTS_REF_1_LLM                              : [u8; 2] = [0x09, 0x9E];
// pub const RANGING_CORE__AMBIENT_WINDOW_EVENTS_REF_1_LLL                              : [u8; 2] = [0x09, 0x9F];
// pub const RANGING_CORE__RANGING_TOTAL_EVENTS_REF_1_MMM                               : [u8; 2] = [0x09, 0xA0];
// pub const RANGING_CORE__RANGING_TOTAL_EVENTS_REF_1_LMM                               : [u8; 2] = [0x09, 0xA1];
// pub const RANGING_CORE__RANGING_TOTAL_EVENTS_REF_1_LLM                               : [u8; 2] = [0x09, 0xA2];
// pub const RANGING_CORE__RANGING_TOTAL_EVENTS_REF_1_LLL                               : [u8; 2] = [0x09, 0xA3];
// pub const RANGING_CORE__SIGNAL_TOTAL_EVENTS_REF_1_MMM                                : [u8; 2] = [0x09, 0xA4];
// pub const RANGING_CORE__SIGNAL_TOTAL_EVENTS_REF_1_LMM                                : [u8; 2] = [0x09, 0xA5];
// pub const RANGING_CORE__SIGNAL_TOTAL_EVENTS_REF_1_LLM                                : [u8; 2] = [0x09, 0xA6];
// pub const RANGING_CORE__SIGNAL_TOTAL_EVENTS_REF_1_LLL                                : [u8; 2] = [0x09, 0xA7];
// pub const RANGING_CORE__TOTAL_PERIODS_ELAPSED_REF_1_MM                               : [u8; 2] = [0x09, 0xA8];
// pub const RANGING_CORE__TOTAL_PERIODS_ELAPSED_REF_1_LM                               : [u8; 2] = [0x09, 0xA9];
// pub const RANGING_CORE__TOTAL_PERIODS_ELAPSED_REF_1_LL                               : [u8; 2] = [0x09, 0xAA];
// pub const RANGING_CORE__AMBIENT_MISMATCH_REF_MM                                      : [u8; 2] = [0x09, 0xAB];
// pub const RANGING_CORE__AMBIENT_MISMATCH_REF_LM                                      : [u8; 2] = [0x09, 0xAC];
// pub const RANGING_CORE__AMBIENT_MISMATCH_REF_LL                                      : [u8; 2] = [0x09, 0xAD];
// pub const RANGING_CORE__GPIO_CONFIG__A0                                              : [u8; 2] = [0x0A, 0x00];
// pub const RANGING_CORE__RESET_CONTROL__A0                                            : [u8; 2] = [0x0A, 0x01];
// pub const RANGING_CORE__INTR_MANAGER__A0                                             : [u8; 2] = [0x0A, 0x02];
// pub const RANGING_CORE__POWER_FSM_TIME_OSC__A0                                       : [u8; 2] = [0x0A, 0x06];
// pub const RANGING_CORE__VCSEL_ATEST__A0                                              : [u8; 2] = [0x0A, 0x07];
// pub const RANGING_CORE__VCSEL_PERIOD_CLIPPED__A0                                     : [u8; 2] = [0x0A, 0x08];
// pub const RANGING_CORE__VCSEL_STOP_CLIPPED__A0                                       : [u8; 2] = [0x0A, 0x09];
// pub const RANGING_CORE__CALIB_2__A0                                                  : [u8; 2] = [0x0A, 0x0A];
// pub const RANGING_CORE__STOP_CONDITION__A0                                           : [u8; 2] = [0x0A, 0x0B];
// pub const RANGING_CORE__STATUS_RESET__A0                                             : [u8; 2] = [0x0A, 0x0C];
// pub const RANGING_CORE__READOUT_CFG__A0                                              : [u8; 2] = [0x0A, 0x0D];
// pub const RANGING_CORE__WINDOW_SETTING__A0                                           : [u8; 2] = [0x0A, 0x0E];
// pub const RANGING_CORE__VCSEL_DELAY__A0                                              : [u8; 2] = [0x0A, 0x1A];
// pub const RANGING_CORE__REFERENCE_2__A0                                              : [u8; 2] = [0x0A, 0x1B];
// pub const RANGING_CORE__REGAVDD1V2__A0                                               : [u8; 2] = [0x0A, 0x1D];
// pub const RANGING_CORE__TST_MUX__A0                                                  : [u8; 2] = [0x0A, 0x1F];
// pub const RANGING_CORE__CUSTOM_FE_2__A0                                              : [u8; 2] = [0x0A, 0x20];
// pub const RANGING_CORE__SPAD_READOUT__A0                                             : [u8; 2] = [0x0A, 0x21];
// pub const RANGING_CORE__CPUMP_1__A0                                                  : [u8; 2] = [0x0A, 0x22];
// pub const RANGING_CORE__SPARE_REGISTER__A0                                           : [u8; 2] = [0x0A, 0x23];
// pub const RANGING_CORE__VCSEL_CONT_STAGE5_BYPASS__A0                                 : [u8; 2] = [0x0A, 0x24];
// pub const RANGING_CORE__RET_SPAD_EN_18                                               : [u8; 2] = [0x0A, 0x25];
// pub const RANGING_CORE__RET_SPAD_EN_19                                               : [u8; 2] = [0x0A, 0x26];
// pub const RANGING_CORE__RET_SPAD_EN_20                                               : [u8; 2] = [0x0A, 0x27];
// pub const RANGING_CORE__RET_SPAD_EN_21                                               : [u8; 2] = [0x0A, 0x28];
// pub const RANGING_CORE__RET_SPAD_EN_22                                               : [u8; 2] = [0x0A, 0x29];
// pub const RANGING_CORE__RET_SPAD_EN_23                                               : [u8; 2] = [0x0A, 0x2A];
// pub const RANGING_CORE__RET_SPAD_EN_24                                               : [u8; 2] = [0x0A, 0x2B];
// pub const RANGING_CORE__RET_SPAD_EN_25                                               : [u8; 2] = [0x0A, 0x2C];
// pub const RANGING_CORE__RET_SPAD_EN_26                                               : [u8; 2] = [0x0A, 0x2D];
// pub const RANGING_CORE__RET_SPAD_EN_27                                               : [u8; 2] = [0x0A, 0x2E];
// pub const RANGING_CORE__RET_SPAD_EN_28                                               : [u8; 2] = [0x0A, 0x2F];
// pub const RANGING_CORE__RET_SPAD_EN_29                                               : [u8; 2] = [0x0A, 0x30];
// pub const RANGING_CORE__RET_SPAD_EN_30                                               : [u8; 2] = [0x0A, 0x31];
// pub const RANGING_CORE__RET_SPAD_EN_31                                               : [u8; 2] = [0x0A, 0x32];
// pub const RANGING_CORE__REF_SPAD_EN_0__EWOK                                          : [u8; 2] = [0x0A, 0x33];
// pub const RANGING_CORE__REF_SPAD_EN_1__EWOK                                          : [u8; 2] = [0x0A, 0x34];
// pub const RANGING_CORE__REF_SPAD_EN_2__EWOK                                          : [u8; 2] = [0x0A, 0x35];
// pub const RANGING_CORE__REF_SPAD_EN_3__EWOK                                          : [u8; 2] = [0x0A, 0x36];
// pub const RANGING_CORE__REF_SPAD_EN_4__EWOK                                          : [u8; 2] = [0x0A, 0x37];
// pub const RANGING_CORE__REF_SPAD_EN_5__EWOK                                          : [u8; 2] = [0x0A, 0x38];
// pub const RANGING_CORE__REF_EN_START_SELECT                                          : [u8; 2] = [0x0A, 0x39];
// pub const RANGING_CORE__REGDVDD1V2_ATEST__EWOK                                       : [u8; 2] = [0x0A, 0x41];
// pub const SOFT_RESET_GO1                                                             : [u8; 2] = [0x0B, 0x00];
// pub const PRIVATE__PATCH_BASE_ADDR_RSLV                                              : [u8; 2] = [0x0E, 0x00];
// pub const PREV_SHADOW_RESULT__INTERRUPT_STATUS                                       : [u8; 2] = [0x0E, 0xD0];
// pub const PREV_SHADOW_RESULT__RANGE_STATUS                                           : [u8; 2] = [0x0E, 0xD1];
// pub const PREV_SHADOW_RESULT__REPORT_STATUS                                          : [u8; 2] = [0x0E, 0xD2];
// pub const PREV_SHADOW_RESULT__STREAM_COUNT                                           : [u8; 2] = [0x0E, 0xD3];
// pub const PREV_SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0                         : [u8; 2] = [0x0E, 0xD4];
// pub const PREV_SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0_HI                      : [u8; 2] = [0x0E, 0xD4];
// pub const PREV_SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0_LO                      : [u8; 2] = [0x0E, 0xD5];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0                        : [u8; 2] = [0x0E, 0xD6];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0_HI                     : [u8; 2] = [0x0E, 0xD6];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0_LO                     : [u8; 2] = [0x0E, 0xD7];
// pub const PREV_SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD0                            : [u8; 2] = [0x0E, 0xD8];
// pub const PREV_SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD0_HI                         : [u8; 2] = [0x0E, 0xD8];
// pub const PREV_SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD0_LO                         : [u8; 2] = [0x0E, 0xD9];
// pub const PREV_SHADOW_RESULT__SIGMA_SD0                                              : [u8; 2] = [0x0E, 0xDA];
// pub const PREV_SHADOW_RESULT__SIGMA_SD0_HI                                           : [u8; 2] = [0x0E, 0xDA];
// pub const PREV_SHADOW_RESULT__SIGMA_SD0_LO                                           : [u8; 2] = [0x0E, 0xDB];
// pub const PREV_SHADOW_RESULT__PHASE_SD0                                              : [u8; 2] = [0x0E, 0xDC];
// pub const PREV_SHADOW_RESULT__PHASE_SD0_HI                                           : [u8; 2] = [0x0E, 0xDC];
// pub const PREV_SHADOW_RESULT__PHASE_SD0_LO                                           : [u8; 2] = [0x0E, 0xDD];
// pub const PREV_SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0                 : [u8; 2] = [0x0E, 0xDE];
// pub const PREV_SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0_HI              : [u8; 2] = [0x0E, 0xDE];
// pub const PREV_SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0_LO              : [u8; 2] = [0x0E, 0xDF];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0    : [u8; 2] = [0x0E, 0xE0];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0_HI : [u8; 2] = [0x0E, 0xE0];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0_LO : [u8; 2] = [0x0E, 0xE1];
// pub const PREV_SHADOW_RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0                    : [u8; 2] = [0x0E, 0xE2];
// pub const PREV_SHADOW_RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0_HI                 : [u8; 2] = [0x0E, 0xE2];
// pub const PREV_SHADOW_RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0_LO                 : [u8; 2] = [0x0E, 0xE3];
// pub const PREV_SHADOW_RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0                    : [u8; 2] = [0x0E, 0xE4];
// pub const PREV_SHADOW_RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0_HI                 : [u8; 2] = [0x0E, 0xE4];
// pub const PREV_SHADOW_RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0_LO                 : [u8; 2] = [0x0E, 0xE5];
// pub const PREV_SHADOW_RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0                         : [u8; 2] = [0x0E, 0xE6];
// pub const PREV_SHADOW_RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0_HI                      : [u8; 2] = [0x0E, 0xE6];
// pub const PREV_SHADOW_RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0_LO                      : [u8; 2] = [0x0E, 0xE7];
// pub const PREV_SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1                         : [u8; 2] = [0x0E, 0xE8];
// pub const PREV_SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1_HI                      : [u8; 2] = [0x0E, 0xE8];
// pub const PREV_SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1_LO                      : [u8; 2] = [0x0E, 0xE9];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1                        : [u8; 2] = [0x0E, 0xEA];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1_HI                     : [u8; 2] = [0x0E, 0xEA];
// pub const PREV_SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1_LO                     : [u8; 2] = [0x0E, 0xEB];
// pub const PREV_SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD1                            : [u8; 2] = [0x0E, 0xEC];
// pub const PREV_SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD1_HI                         : [u8; 2] = [0x0E, 0xEC];
// pub const PREV_SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD1_LO                         : [u8; 2] = [0x0E, 0xED];
// pub const PREV_SHADOW_RESULT__SIGMA_SD1                                              : [u8; 2] = [0x0E, 0xEE];
// pub const PREV_SHADOW_RESULT__SIGMA_SD1_HI                                           : [u8; 2] = [0x0E, 0xEE];
// pub const PREV_SHADOW_RESULT__SIGMA_SD1_LO                                           : [u8; 2] = [0x0E, 0xEF];
// pub const PREV_SHADOW_RESULT__PHASE_SD1                                              : [u8; 2] = [0x0E, 0xF0];
// pub const PREV_SHADOW_RESULT__PHASE_SD1_HI                                           : [u8; 2] = [0x0E, 0xF0];
// pub const PREV_SHADOW_RESULT__PHASE_SD1_LO                                           : [u8; 2] = [0x0E, 0xF1];
// pub const PREV_SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1                 : [u8; 2] = [0x0E, 0xF2];
// pub const PREV_SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1_HI              : [u8; 2] = [0x0E, 0xF2];
// pub const PREV_SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1_LO              : [u8; 2] = [0x0E, 0xF3];
// pub const PREV_SHADOW_RESULT__SPARE_0_SD1                                            : [u8; 2] = [0x0E, 0xF4];
// pub const PREV_SHADOW_RESULT__SPARE_0_SD1_HI                                         : [u8; 2] = [0x0E, 0xF4];
// pub const PREV_SHADOW_RESULT__SPARE_0_SD1_LO                                         : [u8; 2] = [0x0E, 0xF5];
// pub const PREV_SHADOW_RESULT__SPARE_1_SD1                                            : [u8; 2] = [0x0E, 0xF6];
// pub const PREV_SHADOW_RESULT__SPARE_1_SD1_HI                                         : [u8; 2] = [0x0E, 0xF6];
// pub const PREV_SHADOW_RESULT__SPARE_1_SD1_LO                                         : [u8; 2] = [0x0E, 0xF7];
// pub const PREV_SHADOW_RESULT__SPARE_2_SD1                                            : [u8; 2] = [0x0E, 0xF8];
// pub const PREV_SHADOW_RESULT__SPARE_2_SD1_HI                                         : [u8; 2] = [0x0E, 0xF8];
// pub const PREV_SHADOW_RESULT__SPARE_2_SD1_LO                                         : [u8; 2] = [0x0E, 0xF9];
// pub const PREV_SHADOW_RESULT__SPARE_3_SD1                                            : [u8; 2] = [0x0E, 0xFA];
// pub const PREV_SHADOW_RESULT__SPARE_3_SD1_HI                                         : [u8; 2] = [0x0E, 0xFA];
// pub const PREV_SHADOW_RESULT__SPARE_3_SD1_LO                                         : [u8; 2] = [0x0E, 0xFB];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0                         : [u8; 2] = [0x0E, 0xFC];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_3                       : [u8; 2] = [0x0E, 0xFC];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_2                       : [u8; 2] = [0x0E, 0xFD];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_1                       : [u8; 2] = [0x0E, 0xFE];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_0                       : [u8; 2] = [0x0E, 0xFF];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0                          : [u8; 2] = [0x0F, 0x00];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_3                        : [u8; 2] = [0x0F, 0x00];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_2                        : [u8; 2] = [0x0F, 0x01];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_1                        : [u8; 2] = [0x0F, 0x02];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_0                        : [u8; 2] = [0x0F, 0x03];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0                           : [u8; 2] = [0x0F, 0x04];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_3                         : [u8; 2] = [0x0F, 0x04];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_2                         : [u8; 2] = [0x0F, 0x05];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_1                         : [u8; 2] = [0x0F, 0x06];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_0                         : [u8; 2] = [0x0F, 0x07];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0                         : [u8; 2] = [0x0F, 0x08];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_3                       : [u8; 2] = [0x0F, 0x08];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_2                       : [u8; 2] = [0x0F, 0x09];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_1                       : [u8; 2] = [0x0F, 0x0A];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_0                       : [u8; 2] = [0x0F, 0x0B];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1                         : [u8; 2] = [0x0F, 0x0C];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_3                       : [u8; 2] = [0x0F, 0x0C];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_2                       : [u8; 2] = [0x0F, 0x0D];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_1                       : [u8; 2] = [0x0F, 0x0E];
// pub const PREV_SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_0                       : [u8; 2] = [0x0F, 0x0F];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1                          : [u8; 2] = [0x0F, 0x10];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_3                        : [u8; 2] = [0x0F, 0x10];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_2                        : [u8; 2] = [0x0F, 0x11];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_1                        : [u8; 2] = [0x0F, 0x12];
// pub const PREV_SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_0                        : [u8; 2] = [0x0F, 0x13];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1                           : [u8; 2] = [0x0F, 0x14];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_3                         : [u8; 2] = [0x0F, 0x14];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_2                         : [u8; 2] = [0x0F, 0x15];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_1                         : [u8; 2] = [0x0F, 0x16];
// pub const PREV_SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_0                         : [u8; 2] = [0x0F, 0x17];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1                         : [u8; 2] = [0x0F, 0x18];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_3                       : [u8; 2] = [0x0F, 0x18];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_2                       : [u8; 2] = [0x0F, 0x19];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_1                       : [u8; 2] = [0x0F, 0x1A];
// pub const PREV_SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_0                       : [u8; 2] = [0x0F, 0x1B];
// pub const PREV_SHADOW_RESULT_CORE__SPARE_0                                           : [u8; 2] = [0x0F, 0x1C];
// pub const RESULT__DEBUG_STATUS                                                       : [u8; 2] = [0x0F, 0x20];
// pub const RESULT__DEBUG_STAGE                                                        : [u8; 2] = [0x0F, 0x21];
// pub const GPH__SYSTEM__THRESH_RATE_HIGH                                              : [u8; 2] = [0x0F, 0x24];
// pub const GPH__SYSTEM__THRESH_RATE_HIGH_HI                                           : [u8; 2] = [0x0F, 0x24];
// pub const GPH__SYSTEM__THRESH_RATE_HIGH_LO                                           : [u8; 2] = [0x0F, 0x25];
// pub const GPH__SYSTEM__THRESH_RATE_LOW                                               : [u8; 2] = [0x0F, 0x26];
// pub const GPH__SYSTEM__THRESH_RATE_LOW_HI                                            : [u8; 2] = [0x0F, 0x26];
// pub const GPH__SYSTEM__THRESH_RATE_LOW_LO                                            : [u8; 2] = [0x0F, 0x27];
// pub const GPH__SYSTEM__INTERRUPT_CONFIG_GPIO                                         : [u8; 2] = [0x0F, 0x28];
// pub const GPH__DSS_CONFIG__ROI_MODE_CONTROL                                          : [u8; 2] = [0x0F, 0x2F];
// pub const GPH__DSS_CONFIG__MANUAL_EFFECTIVE_SPADS_SELECT                             : [u8; 2] = [0x0F, 0x30];
// pub const GPH__DSS_CONFIG__MANUAL_EFFECTIVE_SPADS_SELECT_HI                          : [u8; 2] = [0x0F, 0x30];
// pub const GPH__DSS_CONFIG__MANUAL_EFFECTIVE_SPADS_SELECT_LO                          : [u8; 2] = [0x0F, 0x31];
// pub const GPH__DSS_CONFIG__MANUAL_BLOCK_SELECT                                       : [u8; 2] = [0x0F, 0x32];
// pub const GPH__DSS_CONFIG__MAX_SPADS_LIMIT                                           : [u8; 2] = [0x0F, 0x33];
// pub const GPH__DSS_CONFIG__MIN_SPADS_LIMIT                                           : [u8; 2] = [0x0F, 0x34];
// pub const GPH__MM_CONFIG__TIMEOUT_MACROP_A_HI                                        : [u8; 2] = [0x0F, 0x36];
// pub const GPH__MM_CONFIG__TIMEOUT_MACROP_A_LO                                        : [u8; 2] = [0x0F, 0x37];
// pub const GPH__MM_CONFIG__TIMEOUT_MACROP_B_HI                                        : [u8; 2] = [0x0F, 0x38];
// pub const GPH__MM_CONFIG__TIMEOUT_MACROP_B_LO                                        : [u8; 2] = [0x0F, 0x39];
// pub const GPH__RANGE_CONFIG__TIMEOUT_MACROP_A_HI                                     : [u8; 2] = [0x0F, 0x3A];
// pub const GPH__RANGE_CONFIG__TIMEOUT_MACROP_A_LO                                     : [u8; 2] = [0x0F, 0x3B];
// pub const GPH__RANGE_CONFIG__VCSEL_PERIOD_A                                          : [u8; 2] = [0x0F, 0x3C];
// pub const GPH__RANGE_CONFIG__VCSEL_PERIOD_B                                          : [u8; 2] = [0x0F, 0x3D];
// pub const GPH__RANGE_CONFIG__TIMEOUT_MACROP_B_HI                                     : [u8; 2] = [0x0F, 0x3E];
// pub const GPH__RANGE_CONFIG__TIMEOUT_MACROP_B_LO                                     : [u8; 2] = [0x0F, 0x3F];
// pub const GPH__RANGE_CONFIG__SIGMA_THRESH                                            : [u8; 2] = [0x0F, 0x40];
// pub const GPH__RANGE_CONFIG__SIGMA_THRESH_HI                                         : [u8; 2] = [0x0F, 0x40];
// pub const GPH__RANGE_CONFIG__SIGMA_THRESH_LO                                         : [u8; 2] = [0x0F, 0x41];
// pub const GPH__RANGE_CONFIG__MIN_COUNT_RATE_RTN_LIMIT_MCPS                           : [u8; 2] = [0x0F, 0x42];
// pub const GPH__RANGE_CONFIG__MIN_COUNT_RATE_RTN_LIMIT_MCPS_HI                        : [u8; 2] = [0x0F, 0x42];
// pub const GPH__RANGE_CONFIG__MIN_COUNT_RATE_RTN_LIMIT_MCPS_LO                        : [u8; 2] = [0x0F, 0x43];
// pub const GPH__RANGE_CONFIG__VALID_PHASE_LOW                                         : [u8; 2] = [0x0F, 0x44];
// pub const GPH__RANGE_CONFIG__VALID_PHASE_HIGH                                        : [u8; 2] = [0x0F, 0x45];
// pub const FIRMWARE__INTERNAL_STREAM_COUNT_DIV                                        : [u8; 2] = [0x0F, 0x46];
// pub const FIRMWARE__INTERNAL_STREAM_COUNTER_VAL                                      : [u8; 2] = [0x0F, 0x47];
// pub const DSS_CALC__ROI_CTRL                                                         : [u8; 2] = [0x0F, 0x54];
// pub const DSS_CALC__SPARE_1                                                          : [u8; 2] = [0x0F, 0x55];
// pub const DSS_CALC__SPARE_2                                                          : [u8; 2] = [0x0F, 0x56];
// pub const DSS_CALC__SPARE_3                                                          : [u8; 2] = [0x0F, 0x57];
// pub const DSS_CALC__SPARE_4                                                          : [u8; 2] = [0x0F, 0x58];
// pub const DSS_CALC__SPARE_5                                                          : [u8; 2] = [0x0F, 0x59];
// pub const DSS_CALC__SPARE_6                                                          : [u8; 2] = [0x0F, 0x5A];
// pub const DSS_CALC__SPARE_7                                                          : [u8; 2] = [0x0F, 0x5B];
// pub const DSS_CALC__USER_ROI_SPAD_EN_0                                               : [u8; 2] = [0x0F, 0x5C];
// pub const DSS_CALC__USER_ROI_SPAD_EN_1                                               : [u8; 2] = [0x0F, 0x5D];
// pub const DSS_CALC__USER_ROI_SPAD_EN_2                                               : [u8; 2] = [0x0F, 0x5E];
// pub const DSS_CALC__USER_ROI_SPAD_EN_3                                               : [u8; 2] = [0x0F, 0x5F];
// pub const DSS_CALC__USER_ROI_SPAD_EN_4                                               : [u8; 2] = [0x0F, 0x60];
// pub const DSS_CALC__USER_ROI_SPAD_EN_5                                               : [u8; 2] = [0x0F, 0x61];
// pub const DSS_CALC__USER_ROI_SPAD_EN_6                                               : [u8; 2] = [0x0F, 0x62];
// pub const DSS_CALC__USER_ROI_SPAD_EN_7                                               : [u8; 2] = [0x0F, 0x63];
// pub const DSS_CALC__USER_ROI_SPAD_EN_8                                               : [u8; 2] = [0x0F, 0x64];
// pub const DSS_CALC__USER_ROI_SPAD_EN_9                                               : [u8; 2] = [0x0F, 0x65];
// pub const DSS_CALC__USER_ROI_SPAD_EN_10                                              : [u8; 2] = [0x0F, 0x66];
// pub const DSS_CALC__USER_ROI_SPAD_EN_11                                              : [u8; 2] = [0x0F, 0x67];
// pub const DSS_CALC__USER_ROI_SPAD_EN_12                                              : [u8; 2] = [0x0F, 0x68];
// pub const DSS_CALC__USER_ROI_SPAD_EN_13                                              : [u8; 2] = [0x0F, 0x69];
// pub const DSS_CALC__USER_ROI_SPAD_EN_14                                              : [u8; 2] = [0x0F, 0x6A];
// pub const DSS_CALC__USER_ROI_SPAD_EN_15                                              : [u8; 2] = [0x0F, 0x6B];
// pub const DSS_CALC__USER_ROI_SPAD_EN_16                                              : [u8; 2] = [0x0F, 0x6C];
// pub const DSS_CALC__USER_ROI_SPAD_EN_17                                              : [u8; 2] = [0x0F, 0x6D];
// pub const DSS_CALC__USER_ROI_SPAD_EN_18                                              : [u8; 2] = [0x0F, 0x6E];
// pub const DSS_CALC__USER_ROI_SPAD_EN_19                                              : [u8; 2] = [0x0F, 0x6F];
// pub const DSS_CALC__USER_ROI_SPAD_EN_20                                              : [u8; 2] = [0x0F, 0x70];
// pub const DSS_CALC__USER_ROI_SPAD_EN_21                                              : [u8; 2] = [0x0F, 0x71];
// pub const DSS_CALC__USER_ROI_SPAD_EN_22                                              : [u8; 2] = [0x0F, 0x72];
// pub const DSS_CALC__USER_ROI_SPAD_EN_23                                              : [u8; 2] = [0x0F, 0x73];
// pub const DSS_CALC__USER_ROI_SPAD_EN_24                                              : [u8; 2] = [0x0F, 0x74];
// pub const DSS_CALC__USER_ROI_SPAD_EN_25                                              : [u8; 2] = [0x0F, 0x75];
// pub const DSS_CALC__USER_ROI_SPAD_EN_26                                              : [u8; 2] = [0x0F, 0x76];
// pub const DSS_CALC__USER_ROI_SPAD_EN_27                                              : [u8; 2] = [0x0F, 0x77];
// pub const DSS_CALC__USER_ROI_SPAD_EN_28                                              : [u8; 2] = [0x0F, 0x78];
// pub const DSS_CALC__USER_ROI_SPAD_EN_29                                              : [u8; 2] = [0x0F, 0x79];
// pub const DSS_CALC__USER_ROI_SPAD_EN_30                                              : [u8; 2] = [0x0F, 0x7A];
// pub const DSS_CALC__USER_ROI_SPAD_EN_31                                              : [u8; 2] = [0x0F, 0x7B];
// pub const DSS_CALC__USER_ROI_0                                                       : [u8; 2] = [0x0F, 0x7C];
// pub const DSS_CALC__USER_ROI_1                                                       : [u8; 2] = [0x0F, 0x7D];
// pub const DSS_CALC__MODE_ROI_0                                                       : [u8; 2] = [0x0F, 0x7E];
// pub const DSS_CALC__MODE_ROI_1                                                       : [u8; 2] = [0x0F, 0x7F];
// pub const SIGMA_ESTIMATOR_CALC__SPARE_0                                              : [u8; 2] = [0x0F, 0x80];
// pub const VHV_RESULT__PEAK_SIGNAL_RATE_MCPS                                          : [u8; 2] = [0x0F, 0x82];
// pub const VHV_RESULT__PEAK_SIGNAL_RATE_MCPS_HI                                       : [u8; 2] = [0x0F, 0x82];
// pub const VHV_RESULT__PEAK_SIGNAL_RATE_MCPS_LO                                       : [u8; 2] = [0x0F, 0x83];
// pub const VHV_RESULT__SIGNAL_TOTAL_EVENTS_REF                                        : [u8; 2] = [0x0F, 0x84];
// pub const VHV_RESULT__SIGNAL_TOTAL_EVENTS_REF_3                                      : [u8; 2] = [0x0F, 0x84];
// pub const VHV_RESULT__SIGNAL_TOTAL_EVENTS_REF_2                                      : [u8; 2] = [0x0F, 0x85];
// pub const VHV_RESULT__SIGNAL_TOTAL_EVENTS_REF_1                                      : [u8; 2] = [0x0F, 0x86];
// pub const VHV_RESULT__SIGNAL_TOTAL_EVENTS_REF_0                                      : [u8; 2] = [0x0F, 0x87];
// pub const PHASECAL_RESULT__PHASE_OUTPUT_REF                                          : [u8; 2] = [0x0F, 0x88];
// pub const PHASECAL_RESULT__PHASE_OUTPUT_REF_HI                                       : [u8; 2] = [0x0F, 0x88];
// pub const PHASECAL_RESULT__PHASE_OUTPUT_REF_LO                                       : [u8; 2] = [0x0F, 0x89];
// pub const DSS_RESULT__TOTAL_RATE_PER_SPAD                                            : [u8; 2] = [0x0F, 0x8A];
// pub const DSS_RESULT__TOTAL_RATE_PER_SPAD_HI                                         : [u8; 2] = [0x0F, 0x8A];
// pub const DSS_RESULT__TOTAL_RATE_PER_SPAD_LO                                         : [u8; 2] = [0x0F, 0x8B];
// pub const DSS_RESULT__ENABLED_BLOCKS                                                 : [u8; 2] = [0x0F, 0x8C];
// pub const DSS_RESULT__NUM_REQUESTED_SPADS                                            : [u8; 2] = [0x0F, 0x8E];
// pub const DSS_RESULT__NUM_REQUESTED_SPADS_HI                                         : [u8; 2] = [0x0F, 0x8E];
// pub const DSS_RESULT__NUM_REQUESTED_SPADS_LO                                         : [u8; 2] = [0x0F, 0x8F];
// pub const MM_RESULT__INNER_INTERSECTION_RATE                                         : [u8; 2] = [0x0F, 0x92];
// pub const MM_RESULT__INNER_INTERSECTION_RATE_HI                                      : [u8; 2] = [0x0F, 0x92];
// pub const MM_RESULT__INNER_INTERSECTION_RATE_LO                                      : [u8; 2] = [0x0F, 0x93];
// pub const MM_RESULT__OUTER_COMPLEMENT_RATE                                           : [u8; 2] = [0x0F, 0x94];
// pub const MM_RESULT__OUTER_COMPLEMENT_RATE_HI                                        : [u8; 2] = [0x0F, 0x94];
// pub const MM_RESULT__OUTER_COMPLEMENT_RATE_LO                                        : [u8; 2] = [0x0F, 0x95];
// pub const MM_RESULT__TOTAL_OFFSET                                                    : [u8; 2] = [0x0F, 0x96];
// pub const MM_RESULT__TOTAL_OFFSET_HI                                                 : [u8; 2] = [0x0F, 0x96];
// pub const MM_RESULT__TOTAL_OFFSET_LO                                                 : [u8; 2] = [0x0F, 0x97];
// pub const XTALK_CALC__XTALK_FOR_ENABLED_SPADS                                        : [u8; 2] = [0x0F, 0x98];
// pub const XTALK_CALC__XTALK_FOR_ENABLED_SPADS_3                                      : [u8; 2] = [0x0F, 0x98];
// pub const XTALK_CALC__XTALK_FOR_ENABLED_SPADS_2                                      : [u8; 2] = [0x0F, 0x99];
// pub const XTALK_CALC__XTALK_FOR_ENABLED_SPADS_1                                      : [u8; 2] = [0x0F, 0x9A];
// pub const XTALK_CALC__XTALK_FOR_ENABLED_SPADS_0                                      : [u8; 2] = [0x0F, 0x9B];
// pub const XTALK_RESULT__AVG_XTALK_USER_ROI_KCPS                                      : [u8; 2] = [0x0F, 0x9C];
// pub const XTALK_RESULT__AVG_XTALK_USER_ROI_KCPS_3                                    : [u8; 2] = [0x0F, 0x9C];
// pub const XTALK_RESULT__AVG_XTALK_USER_ROI_KCPS_2                                    : [u8; 2] = [0x0F, 0x9D];
// pub const XTALK_RESULT__AVG_XTALK_USER_ROI_KCPS_1                                    : [u8; 2] = [0x0F, 0x9E];
// pub const XTALK_RESULT__AVG_XTALK_USER_ROI_KCPS_0                                    : [u8; 2] = [0x0F, 0x9F];
// pub const XTALK_RESULT__AVG_XTALK_MM_INNER_ROI_KCPS                                  : [u8; 2] = [0x0F, 0xA0];
// pub const XTALK_RESULT__AVG_XTALK_MM_INNER_ROI_KCPS_3                                : [u8; 2] = [0x0F, 0xA0];
// pub const XTALK_RESULT__AVG_XTALK_MM_INNER_ROI_KCPS_2                                : [u8; 2] = [0x0F, 0xA1];
// pub const XTALK_RESULT__AVG_XTALK_MM_INNER_ROI_KCPS_1                                : [u8; 2] = [0x0F, 0xA2];
// pub const XTALK_RESULT__AVG_XTALK_MM_INNER_ROI_KCPS_0                                : [u8; 2] = [0x0F, 0xA3];
// pub const XTALK_RESULT__AVG_XTALK_MM_OUTER_ROI_KCPS                                  : [u8; 2] = [0x0F, 0xA4];
// pub const XTALK_RESULT__AVG_XTALK_MM_OUTER_ROI_KCPS_3                                : [u8; 2] = [0x0F, 0xA4];
// pub const XTALK_RESULT__AVG_XTALK_MM_OUTER_ROI_KCPS_2                                : [u8; 2] = [0x0F, 0xA5];
// pub const XTALK_RESULT__AVG_XTALK_MM_OUTER_ROI_KCPS_1                                : [u8; 2] = [0x0F, 0xA6];
// pub const XTALK_RESULT__AVG_XTALK_MM_OUTER_ROI_KCPS_0                                : [u8; 2] = [0x0F, 0xA7];
// pub const RANGE_RESULT__ACCUM_PHASE                                                  : [u8; 2] = [0x0F, 0xA8];
// pub const RANGE_RESULT__ACCUM_PHASE_3                                                : [u8; 2] = [0x0F, 0xA8];
// pub const RANGE_RESULT__ACCUM_PHASE_2                                                : [u8; 2] = [0x0F, 0xA9];
// pub const RANGE_RESULT__ACCUM_PHASE_1                                                : [u8; 2] = [0x0F, 0xAA];
// pub const RANGE_RESULT__ACCUM_PHASE_0                                                : [u8; 2] = [0x0F, 0xAB];
// pub const RANGE_RESULT__OFFSET_CORRECTED_RANGE                                       : [u8; 2] = [0x0F, 0xAC];
// pub const RANGE_RESULT__OFFSET_CORRECTED_RANGE_HI                                    : [u8; 2] = [0x0F, 0xAC];
// pub const RANGE_RESULT__OFFSET_CORRECTED_RANGE_LO                                    : [u8; 2] = [0x0F, 0xAD];
// pub const SHADOW_PHASECAL_RESULT__VCSEL_START                                        : [u8; 2] = [0x0F, 0xAE];
// pub const SHADOW_RESULT__INTERRUPT_STATUS                                            : [u8; 2] = [0x0F, 0xB0];
// pub const SHADOW_RESULT__RANGE_STATUS                                                : [u8; 2] = [0x0F, 0xB1];
// pub const SHADOW_RESULT__REPORT_STATUS                                               : [u8; 2] = [0x0F, 0xB2];
// pub const SHADOW_RESULT__STREAM_COUNT                                                : [u8; 2] = [0x0F, 0xB3];
// pub const SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0                              : [u8; 2] = [0x0F, 0xB4];
// pub const SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0_HI                           : [u8; 2] = [0x0F, 0xB4];
// pub const SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD0_LO                           : [u8; 2] = [0x0F, 0xB5];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0                             : [u8; 2] = [0x0F, 0xB6];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0_HI                          : [u8; 2] = [0x0F, 0xB6];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD0_LO                          : [u8; 2] = [0x0F, 0xB7];
// pub const SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD0                                 : [u8; 2] = [0x0F, 0xB8];
// pub const SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD0_HI                              : [u8; 2] = [0x0F, 0xB8];
// pub const SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD0_LO                              : [u8; 2] = [0x0F, 0xB9];
// pub const SHADOW_RESULT__SIGMA_SD0                                                   : [u8; 2] = [0x0F, 0xBA];
// pub const SHADOW_RESULT__SIGMA_SD0_HI                                                : [u8; 2] = [0x0F, 0xBA];
// pub const SHADOW_RESULT__SIGMA_SD0_LO                                                : [u8; 2] = [0x0F, 0xBB];
// pub const SHADOW_RESULT__PHASE_SD0                                                   : [u8; 2] = [0x0F, 0xBC];
// pub const SHADOW_RESULT__PHASE_SD0_HI                                                : [u8; 2] = [0x0F, 0xBC];
// pub const SHADOW_RESULT__PHASE_SD0_LO                                                : [u8; 2] = [0x0F, 0xBD];
// pub const SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0                      : [u8; 2] = [0x0F, 0xBE];
// pub const SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0_HI                   : [u8; 2] = [0x0F, 0xBE];
// pub const SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0_LO                   : [u8; 2] = [0x0F, 0xBF];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0         : [u8; 2] = [0x0F, 0xC0];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0_HI      : [u8; 2] = [0x0F, 0xC0];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_CROSSTALK_CORRECTED_MCPS_SD0_LO      : [u8; 2] = [0x0F, 0xC1];
// pub const SHADOW_RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0                         : [u8; 2] = [0x0F, 0xC2];
// pub const SHADOW_RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0_HI                      : [u8; 2] = [0x0F, 0xC2];
// pub const SHADOW_RESULT__MM_INNER_ACTUAL_EFFECTIVE_SPADS_SD0_LO                      : [u8; 2] = [0x0F, 0xC3];
// pub const SHADOW_RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0                         : [u8; 2] = [0x0F, 0xC4];
// pub const SHADOW_RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0_HI                      : [u8; 2] = [0x0F, 0xC4];
// pub const SHADOW_RESULT__MM_OUTER_ACTUAL_EFFECTIVE_SPADS_SD0_LO                      : [u8; 2] = [0x0F, 0xC5];
// pub const SHADOW_RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0                              : [u8; 2] = [0x0F, 0xC6];
// pub const SHADOW_RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0_HI                           : [u8; 2] = [0x0F, 0xC6];
// pub const SHADOW_RESULT__AVG_SIGNAL_COUNT_RATE_MCPS_SD0_LO                           : [u8; 2] = [0x0F, 0xC7];
// pub const SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1                              : [u8; 2] = [0x0F, 0xC8];
// pub const SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1_HI                           : [u8; 2] = [0x0F, 0xC8];
// pub const SHADOW_RESULT__DSS_ACTUAL_EFFECTIVE_SPADS_SD1_LO                           : [u8; 2] = [0x0F, 0xC9];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1                             : [u8; 2] = [0x0F, 0xCA];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1_HI                          : [u8; 2] = [0x0F, 0xCA];
// pub const SHADOW_RESULT__PEAK_SIGNAL_COUNT_RATE_MCPS_SD1_LO                          : [u8; 2] = [0x0F, 0xCB];
// pub const SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD1                                 : [u8; 2] = [0x0F, 0xCC];
// pub const SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD1_HI                              : [u8; 2] = [0x0F, 0xCC];
// pub const SHADOW_RESULT__AMBIENT_COUNT_RATE_MCPS_SD1_LO                              : [u8; 2] = [0x0F, 0xCD];
// pub const SHADOW_RESULT__SIGMA_SD1                                                   : [u8; 2] = [0x0F, 0xCE];
// pub const SHADOW_RESULT__SIGMA_SD1_HI                                                : [u8; 2] = [0x0F, 0xCE];
// pub const SHADOW_RESULT__SIGMA_SD1_LO                                                : [u8; 2] = [0x0F, 0xCF];
// pub const SHADOW_RESULT__PHASE_SD1                                                   : [u8; 2] = [0x0F, 0xD0];
// pub const SHADOW_RESULT__PHASE_SD1_HI                                                : [u8; 2] = [0x0F, 0xD0];
// pub const SHADOW_RESULT__PHASE_SD1_LO                                                : [u8; 2] = [0x0F, 0xD1];
// pub const SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1                      : [u8; 2] = [0x0F, 0xD2];
// pub const SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1_HI                   : [u8; 2] = [0x0F, 0xD2];
// pub const SHADOW_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD1_LO                   : [u8; 2] = [0x0F, 0xD3];
// pub const SHADOW_RESULT__SPARE_0_SD1                                                 : [u8; 2] = [0x0F, 0xD4];
// pub const SHADOW_RESULT__SPARE_0_SD1_HI                                              : [u8; 2] = [0x0F, 0xD4];
// pub const SHADOW_RESULT__SPARE_0_SD1_LO                                              : [u8; 2] = [0x0F, 0xD5];
// pub const SHADOW_RESULT__SPARE_1_SD1                                                 : [u8; 2] = [0x0F, 0xD6];
// pub const SHADOW_RESULT__SPARE_1_SD1_HI                                              : [u8; 2] = [0x0F, 0xD6];
// pub const SHADOW_RESULT__SPARE_1_SD1_LO                                              : [u8; 2] = [0x0F, 0xD7];
// pub const SHADOW_RESULT__SPARE_2_SD1                                                 : [u8; 2] = [0x0F, 0xD8];
// pub const SHADOW_RESULT__SPARE_2_SD1_HI                                              : [u8; 2] = [0x0F, 0xD8];
// pub const SHADOW_RESULT__SPARE_2_SD1_LO                                              : [u8; 2] = [0x0F, 0xD9];
// pub const SHADOW_RESULT__SPARE_3_SD1                                                 : [u8; 2] = [0x0F, 0xDA];
// pub const SHADOW_RESULT__THRESH_INFO                                                 : [u8; 2] = [0x0F, 0xDB];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0                              : [u8; 2] = [0x0F, 0xDC];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_3                            : [u8; 2] = [0x0F, 0xDC];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_2                            : [u8; 2] = [0x0F, 0xDD];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_1                            : [u8; 2] = [0x0F, 0xDE];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD0_0                            : [u8; 2] = [0x0F, 0xDF];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0                               : [u8; 2] = [0x0F, 0xE0];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_3                             : [u8; 2] = [0x0F, 0xE0];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_2                             : [u8; 2] = [0x0F, 0xE1];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_1                             : [u8; 2] = [0x0F, 0xE2];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD0_0                             : [u8; 2] = [0x0F, 0xE3];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0                                : [u8; 2] = [0x0F, 0xE4];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_3                              : [u8; 2] = [0x0F, 0xE4];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_2                              : [u8; 2] = [0x0F, 0xE5];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_1                              : [u8; 2] = [0x0F, 0xE6];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD0_0                              : [u8; 2] = [0x0F, 0xE7];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0                              : [u8; 2] = [0x0F, 0xE8];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_3                            : [u8; 2] = [0x0F, 0xE8];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_2                            : [u8; 2] = [0x0F, 0xE9];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_1                            : [u8; 2] = [0x0F, 0xEA];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD0_0                            : [u8; 2] = [0x0F, 0xEB];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1                              : [u8; 2] = [0x0F, 0xEC];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_3                            : [u8; 2] = [0x0F, 0xEC];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_2                            : [u8; 2] = [0x0F, 0xED];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_1                            : [u8; 2] = [0x0F, 0xEE];
// pub const SHADOW_RESULT_CORE__AMBIENT_WINDOW_EVENTS_SD1_0                            : [u8; 2] = [0x0F, 0xEF];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1                               : [u8; 2] = [0x0F, 0xF0];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_3                             : [u8; 2] = [0x0F, 0xF0];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_2                             : [u8; 2] = [0x0F, 0xF1];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_1                             : [u8; 2] = [0x0F, 0xF2];
// pub const SHADOW_RESULT_CORE__RANGING_TOTAL_EVENTS_SD1_0                             : [u8; 2] = [0x0F, 0xF3];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1                                : [u8; 2] = [0x0F, 0xF4];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_3                              : [u8; 2] = [0x0F, 0xF4];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_2                              : [u8; 2] = [0x0F, 0xF5];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_1                              : [u8; 2] = [0x0F, 0xF6];
// pub const SHADOW_RESULT_CORE__SIGNAL_TOTAL_EVENTS_SD1_0                              : [u8; 2] = [0x0F, 0xF7];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1                              : [u8; 2] = [0x0F, 0xF8];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_3                            : [u8; 2] = [0x0F, 0xF8];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_2                            : [u8; 2] = [0x0F, 0xF9];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_1                            : [u8; 2] = [0x0F, 0xFA];
// pub const SHADOW_RESULT_CORE__TOTAL_PERIODS_ELAPSED_SD1_0                            : [u8; 2] = [0x0F, 0xFB];
// pub const SHADOW_RESULT_CORE__SPARE_0                                                : [u8; 2] = [0x0F, 0xFC];
// pub const SHADOW_PHASECAL_RESULT__REFERENCE_PHASE_HI                                 : [u8; 2] = [0x0F, 0xFE];
// pub const SHADOW_PHASECAL_RESULT__REFERENCE_PHASE_LO                                 : [u8; 2] = [0x0F, 0xFF];
